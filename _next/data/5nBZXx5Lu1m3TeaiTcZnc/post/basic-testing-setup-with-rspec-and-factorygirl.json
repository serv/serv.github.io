{"pageProps":{"post":{"title":"Basic Testing Setup with RSpec and FactoryGirl","createdAt":"2014-02-04T00:00:00-08:00","categories":["ruby","testing"],"slug":"basic-testing-setup-with-rspec-and-factorygirl","fullPath":"/Users/jasonkim/projects/websites/serv.github.io/_posts/2014-02-04-basic-testing-setup-with-rspec-and-factorygirl.md","content":"<h2>tl;dr</h2>\n<ul>\n<li>Hate TDD blah blah</li>\n<li>A directory structure of a Ruby program</li>\n<li>Setting up RSpec</li>\n<li>Setting up FactoryGirl</li>\n</ul>\n<blockquote>\n<p>Setting up RSpec and FactoryGirl wanted me to choke\na few people.</p>\n<p>-- <em>John Smith</em>, renown Rubyist,\nhusband, author of no books, father of none</p>\n</blockquote>\n<h4>An Adaquate Response by @tenderlove</h4>\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>Here is a Friday Hug. Deal with it. (HAPPY FRIDAY!!! &lt;3&lt;3&lt;3) <a href=\"http://t.co/6i5rNWqybv\">pic.twitter.com/6i5rNWqybv</a></p>&mdash; Aaron Patterson (@tenderlove) <a href=\"https://twitter.com/tenderlove/statuses/426779493747810305\">January 24, 2014</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<p>O boy, do I hate test driven development. Nothing feels\nworse than writing clean automated tests only to realize that\nthey've just rendered useless by a small change in an\napplication feature.\nAnd yet, we writes tests anyway because they pay off in\nthe long run.</p>\n<p>With that in mind, I wanted to write a guide on preparing RSpec\nand FactoryGirl for writing Ruby programs. RSpec and FactoryGirl\nare great Gems that help you immensely in writing automated\ntests, but I've had times when I would curse gods in just\nprepping RSpec and FactoryGirl.</p>\n<h2>A Directory Structure of a Ruby Program</h2>\n<p>There is no <em>one right way</em> to structure a Ruby program.\nHowever, from my experience, I notice myself increasingly\nstructuring Ruby programs as if I am writing a Ruby Gem.\nOthers looking at the code understand the program better,\nif they are familiar with how Ruby Gems are typically written.\nModularized code helped me debug easier as well.</p>\n<p>Let's say we are writing a Ruby program for a linked list with\na List class and a Node class. Then we will have a directory\nstructure like below.</p>\n<pre><code>├── Gemfile\n├── Gemfile.lock\n├── lib\n│   └── models\n│       ├── list.rb\n│       └── node.rb\n└── spec\n    ├── factories\n    │   ├── lists.rb\n    │   └── nodes.rb\n    ├── models\n    │   ├── list_spec.rb\n    │   └── node_spec.rb\n    └── spec_helper.rb\n</code></pre>\n<ul>\n<li><code>Gemfile</code>: contains a list of Gems used in the program</li>\n<li><code>lib</code>: a directory that contains code that runs the program</li>\n<li><code>spec</code>: a directory that contains RSpec and FactoryGirl\nrelated code</li>\n<li><code>spec/factories</code>: a directory that contains factories for\nFactoryGirl</li>\n</ul>\n<h2>Setting Up RSpec and FactoryGirl</h2>\n<h4>Tutorial Environment</h4>\n<ul>\n<li>Mac OS X Mavericks Version 10.9.1</li>\n<li>ruby 2.1.0p0 (2013-12-25 revision 44422) [x86_64-darwin12.0]</li>\n<li>rspec 2.14.7</li>\n</ul>\n<h3>1. Gemfile</h3>\n<p>Prepare Gemfile with RSpec and FactoryGirl.</p>\n<p>{% highlight ruby %}</p>\n<h1>Gemfile</h1>\n<p>source '<a href=\"https://rubygems.org&#x27;\">https://rubygems.org'</a></p>\n<p>gem \"rspec\"\ngem \"factory_girl\"\n{% endhighlight %}</p>\n<p>Run <code>$ bundle install</code>.</p>\n<h3>2. Prepare RSpec</h3>\n<p>RSpec is a Ruby Gem that helps you write automated tests.</p>\n<p>{% highlight ruby %}</p>\n<h1>spec/spec_helper.rb</h1>\n<p>require 'rubygems'</p>\n<p>RSpec.configure do |config|\nend\n{% endhighlight %}</p>\n<h3>3. Prepare FactoryGirl</h3>\n<p>FactoryGirl is a Ruby Gem that mocks certain classes for\nautomated tests. We will use FactoryGirl to mock nodes and\nlists.</p>\n<p>Add this to the RSpec config.</p>\n<p>{% highlight ruby %}</p>\n<h1>spec/spec_helper.rb</h1>\n<p>require 'rubygems'\nrequire 'factory_girl'</p>\n<p>RSpec.configure do |config|\nconfig.include FactoryGirl::Syntax::Methods\nend\n{% endhighlight %}</p>\n<h3>4. Building Factories</h3>\n<p>These are just empty factories.</p>\n<p>{% highlight ruby %}</p>\n<h1>spec/factories/lists.rb</h1>\n<p>FactoryGirl.define do\nfactory :list do\nend\nend\n{% endhighlight %}</p>\n<p>{% highlight ruby %}</p>\n<h1>spec/factories/nodes.rb</h1>\n<p>FactoryGirl.define do\nfactory :node do\nend\nend\n{% endhighlight %}</p>\n<h3>5. Describing Models in RSpec</h3>\n<p>And these are just empty model specs.</p>\n<p>{% highlight ruby %}</p>\n<h1>spec/models/node_spec.rb</h1>\n<p>require 'spec_helper'</p>\n<p>describe Node do</p>\n<p>end\n{% endhighlight %}</p>\n<p>{% highlight ruby %}</p>\n<h1>spec/models/list_spec.rb</h1>\n<p>require 'spec_helper'</p>\n<p>describe List do</p>\n<p>end\n{% endhighlight %}</p>\n<p>Try running RSpec tests now. Run <code>$ rspec spec</code>.</p>\n<p>You should get an error message that reads something like:</p>\n<pre><code>/...../spec/models/list_spec.rb:3:in `&#x3C;top (required)>': uninitialized constant List (NameError)\n</code></pre>\n<h3>6. Add Models</h3>\n<p>The error above is caused by the fact that we don't actually\nhave any models yet.</p>\n<p>{% highlight ruby %}</p>\n<h1>lib/models/node.rb</h1>\n<p>class Node\nend\n{% endhighlight %}</p>\n<p>{% highlight ruby %}</p>\n<h1>lib/models/list.rb</h1>\n<p>class List\nend\n{% endhighlight %}</p>\n<p>Try running RSpec tests again. Run <code>$ rspec spec</code>.</p>\n<p>You should get the same error message that reads:</p>\n<pre><code>/...../spec/models/list_spec.rb:3:in `&#x3C;top (required)>': uninitialized constant List (NameError)\n</code></pre>\n<h3>7. Adding Dependancies in RSpec Config</h3>\n<p>We are getting this error because RSpec is unable to location the models we just created.</p>\n<p>{% highlight ruby %}</p>\n<h1>spec/spec_helper</h1>\n<p>require 'rubygems'\nrequire 'factory_girl'</p>\n<p>require_relative '../lib/models/list'\nrequire_relative '../lib/models/node'</p>\n<p>RSpec.configure do |config|\nconfig.include FactoryGirl::Syntax::Methods\nend\n{% endhighlight %}</p>\n<p>Now try running <code>$ rspec spec</code>.</p>\n<p>Voila! Tests are running! Well, we don't really have any tests,\nbut we have RSpec finally running.</p>\n<pre><code>No examples found.\n\n\nFinished in 0.00006 seconds\n0 examples, 0 failures\n</code></pre>\n<h3>8. Running Tests</h3>\n<p>We will write very basic test that confirms that we can create\na Node object and a List object.</p>\n<p>{% highlight ruby %}</p>\n<h1>spec/models/node_spec.rb</h1>\n<p>require 'spec_helper'</p>\n<p>describe Node do<br>\ndescribe 'instantiation' do\nlet!(:node) { build(:node) }</p>\n<pre><code>it 'instantiates a list' do\n  expect(node.class.name).to eq(\"Node\")\nend\n</code></pre>\n<p>  end\nend\n{% endhighlight %}</p>\n<p>{% highlight ruby %}</p>\n<h1>spec/models/list_spec.rb</h1>\n<p>require 'spec_helper'</p>\n<p>describe List do<br>\ndescribe 'instantiation' do\nlet!(:list) { build(:list) }</p>\n<pre><code>it 'instantiates a list' do\n  expect(list.class.name).to eq(\"List\")\nend\n</code></pre>\n<p>  end\nend\n{% endhighlight %}</p>\n<p>Try running the tests <code>$ rspec spec</code>.</p>\n<p>You should get an error saying that node and list factories\nhave not been registered.</p>\n<pre><code>FF\n\nFailures:\n\n  1) List instantiation instantiates a list\n     Failure/Error: let!(:list) { build(:list) }\n     ArgumentError:\n       Factory not registered: list\n     # ./spec/models/list_spec.rb:5:in `block (3 levels) in &#x3C;top (required)>'\n\n  2) Node instantiation instantiates a list\n     Failure/Error: let!(:node) { build(:node) }\n     ArgumentError:\n       Factory not registered: node\n     # ./spec/models/node_spec.rb:5:in `block (3 levels) in &#x3C;top (required)>'\n\nFinished in 0.00074 seconds\n2 examples, 2 failures\n\nFailed examples:\n\nrspec ./spec/models/list_spec.rb:7 # List instantiation instantiates a list\nrspec ./spec/models/node_spec.rb:7 # Node instantiation instantiates a list\n</code></pre>\n<p>The problem is caused by RSpec not being able to find\nFactoryGirl files.</p>\n<p>Add FactoryGirl files as dependancies running RSpec.</p>\n<p>{% highlight ruby %}</p>\n<h1>spec/spec_helper.rb</h1>\n<p>require 'rubygems'\nrequire 'factory_girl'</p>\n<p>require_relative '../lib/models/list'\nrequire_relative '../lib/models/node'\nrequire_relative '../spec/factories/lists.rb'\nrequire_relative '../spec/factories/nodes.rb'</p>\n<p>RSpec.configure do |config|\nconfig.include FactoryGirl::Syntax::Methods\nend\n{% endhighlight %}</p>\n<p>Now you should be able to run tests successfully.</p>\n<pre><code>..\n\nFinished in 0.00151 seconds\n2 examples, 0 failures\n</code></pre>\n"}},"__N_SSG":true}