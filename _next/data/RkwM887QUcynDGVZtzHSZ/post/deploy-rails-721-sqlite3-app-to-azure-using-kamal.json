{"pageProps":{"post":{"title":"Deploy Rails 7.2.1 + Sqlite3 App to Azure Using Kamal","createdAt":"2024-09-23T23:07:51-07:00","categories":["rails","ruby","azure","kamal"],"slug":"deploy-rails-721-sqlite3-app-to-azure-using-kamal","fullPath":"/Users/jasonkim/projects/websites/serv.github.io/_posts/2024-09-23-deploy-rails-721-app-to-azure-using-kamal.md","content":"<p><a href=\"https://kamal-deploy.org/\">Kamal</a> is a deployment tool for\ndeploying Rails apps to cloud environments.\nAnd Azure is a fantastic cloud service provider (I work for Microsoft) to\ndeploy Rails apps.</p>\n<p>Let's try to deploy a test Rails app with a Sqlite3 DB to Azure.</p>\n<p>Although this guide will go into details about setting up various systems in\nAzure, the guide assumes that you have Azure account and billing setup already.\nThe guide also assumes some preliminary understanding of Rails.</p>\n<p>Here are the exact versions of tools I am using as of April 7, 2024.</p>\n<ul>\n<li>Ruby: 3.3.0</li>\n<li>Rails: 7.2.1</li>\n<li>Kamal: 1.3.1</li>\n<li>Sqlite: 3.43.2</li>\n</ul>\n<h1>1. Settings up Rails App</h1>\n<h2>1.1 Create a new Rails app</h2>\n<p><code>$ rails new rails-kamal-deployed-to-azure --minimal</code></p>\n<h2>1.2 Add a scaffold</h2>\n<ul>\n<li><code>$ cd rails-kamal-deployed-to-azure</code></li>\n<li><code>$ rails g scaffold post title:string content:text</code></li>\n</ul>\n<h2>1.3 Run migration</h2>\n<ul>\n<li>You can omit <code>rails db:create</code> because database will be created by starting docker-compose</li>\n<li>Run <code>$ rails db:migrate</code> </li>\n</ul>\n<h2>1.4 Update routes</h2>\n<p>In <code>routes.rb</code>,</p>\n<pre><code class=\"language-ruby\">root \"posts#index\"\n</code></pre>\n<h2>1.5 Start the server to test locally</h2>\n<ul>\n<li><code>$ ./bin/rails s</code></li>\n<li>Check that the server is locally running.</li>\n<li>Go to <a href=\"http://localhost:3000\">localhost:3000</a></li>\n<li>You should see something like this.<ul>\n<li><img src=\"/images/2024/9/16/16-local-rails.png\"></li>\n</ul></li>\n</ul>\n<h1>2. Azure</h1>\n<p>You should have a subscription and a resource group for Azure before you proceed.</p>\n<h2>2.1 Create virtual machines</h2>\n<ul>\n<li>Go to <a href=\"https://portal.azure.com/#create/Microsoft.VirtualMachine-ARM\">https://portal.azure.com/#create/Microsoft.VirtualMachine-ARM</a></li>\n<li>Select a subscription and a resource group.</li>\n<li>Use a name like <code>rails-kamal-deployed-to-azure-1</code></li>\n<li>Choose <code>SSH public key</code> for <code>Authentication type > Administrator account</code>.</li>\n<li>Add <code>Key pair name</code>. Use a name like <code>rails-kamal-deployed-to-azure-1_key</code>. <ul>\n<li><img src=\"/images/2024/9/16/16-ssh.png\"></li>\n</ul></li>\n<li>Enable ports 22, 80, 443<ul>\n<li><img src=\"/images/2024/9/16/16-inbound-ports.png\"></li>\n</ul></li>\n<li>Click \"Review + create\"</li>\n<li>Download the key when prompted and keep it handy.<ul>\n<li><img src=\"/images/2024/9/16/16-download-key.png\"></li>\n</ul></li>\n</ul>\n<h3>2.1.1. Update SSH config</h3>\n<ul>\n<li>Inside <code>~/.ssh/config</code></li>\n<li>Add<pre><code>Host 74.235.199.96\n  IdentityFile ./rails-kamal-deployed-to-azure-1_key.pem\n  User azureuser\n</code></pre></li>\n<li><code>$ ssh-add ~/.ssh/rails-kamal-deployed-to-azure-1_key.pem</code><ul>\n<li>You may get <pre><code>$ ssh-add ~/.ssh/rails-kamal-deployed-to-azure-1_key.pem\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions 0644 for '/Users/jasonkim/.ssh/rails-kamal-deployed-to-azure-1_key.pem' are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\n</code></pre><ul>\n<li><code>$ chmod 600 ~/.ssh/rails-kamal-deployed-to-azure-1_key.pem</code></li>\n<li>Now you can add it.<pre><code>$ ssh-add ~/.ssh/rails-kamal-deployed-to-azure-1_key.pem\nIdentity added: /Users/jasonkim/.ssh/rails-kamal-deployed-to-azure-1_key.pem (/Users/jasonkim/.ssh/rails-kamal-deployed-to-azure-1_key.pem)\n</code></pre></li>\n<li>check that ssh-ing into the VM works</li>\n<li>Make sure the VM is turned on.</li>\n</ul></li>\n</ul></li>\n<li>SSH into the box<ul>\n<li><code>$ sudo usermod -aG docker $USER</code></li>\n</ul></li>\n</ul>\n<h2>2.2 Create Container Registry</h2>\n<ul>\n<li>Go to <a href=\"https://portal.azure.com/#browse/Microsoft.ContainerRegistry%2Fregistries\">https://portal.azure.com/#browse/Microsoft.ContainerRegistry%2Fregistries</a></li>\n<li>Create a Container Registry<ul>\n<li><img src=\"/images/2024/9/16/16-registry.png\"></li>\n</ul></li>\n<li>Once the registry is created, go to the registry resource</li>\n<li>Go to Settings > Access Keys section</li>\n<li>Check \"Admin user\"</li>\n<li>Copy the passwords</li>\n</ul>\n<h2>2.3 Create a load balancer</h2>\n<ul>\n<li>Go to <a href=\"https://portal.azure.com/#create/Microsoft.LoadBalancer-ARM\">https://portal.azure.com/#create/Microsoft.LoadBalancer-ARM</a></li>\n<li>Under Basics, setup the load balancer like this<ul>\n<li><img src=\"/images/2024/9/16/lb.png\"></li>\n</ul></li>\n<li>Click Next: Frontend</li>\n<li>Click \"Add a fronted IP Configuration\"</li>\n<li>You'll need to create a public IP Address.</li>\n<li>Click \"Create New\" under Public IP Address</li>\n<li>Create one like this<ul>\n<li><img src=\"/images/2024/9/16/public-ip.png\"></li>\n</ul></li>\n<li>Click \"save\" to add frontend IP configuration</li>\n<li>Click \"Review + create\"</li>\n<li>Click \"create\"</li>\n</ul>\n<h2>2.4 Setup VM to use the LB</h2>\n<ul>\n<li>Go to the VM page</li>\n<li>Click on the VM that should be behind the load balancer</li>\n<li>Click Network > Load balancing </li>\n<li>Click Add load balancing</li>\n<li>Click Add existing</li>\n<li>Setup load balancing like the following<ul>\n<li><img src=\"/images/2024/9/16/lb-setup-vm.png\"></li>\n</ul></li>\n<li>Click Save</li>\n<li>This should take upto a minute</li>\n</ul>\n<h2>2.5 Add NAT rule</h2>\n<ul>\n<li>Go select the load balancer</li>\n<li>Go to Settings > Inbound NAT Rules</li>\n<li>Add</li>\n<li>Setup the rule like below<ul>\n<li><img src=\"/images/2024/9/16/natrule.png\"></li>\n</ul></li>\n</ul>\n<h1>3. Kamal Setup</h1>\n<p>Before you begin, make sure <strong>Docker is locally running</strong> from the machine that you are deploying from.</p>\n<p>Follow the instructions found <a href=\"https://kamal-deploy.org/docs/installation/\">here</a>.</p>\n<ul>\n<li><code>$ gem install kamal</code></li>\n<li>inside your app directory, run <code>$ kamal init</code></li>\n</ul>\n<h2>3.1 Rails Secret</h2>\n<ul>\n<li>Run <code>$ bin/rails credentials:edit</code></li>\n<li>Copy the value</li>\n<li>Paste to <code>.env</code> file for <code>RAILS_MASTER_KEY</code> environment variable.</li>\n</ul>\n<p>If you skip this, you will likely face an error like below:</p>\n<pre><code> ERROR bin/rails aborted!\nArgumentError: key must be 16 bytes (ArgumentError)\n\n        cipher.key = @secret\n                     ^^^^^^^\n/rails/config/environment.rb:5:in `&#x3C;main>'\nTasks: TOP => db:prepare => db:load_config => environment\n(See full trace by running task with --trace)\nbin/rails aborted!\nArgumentError: key must be 16 bytes (ArgumentError)\n\n        cipher.key = @secret\n                     ^^^^^^^\n/rails/config/environment.rb:5:in `&#x3C;main>'\n</code></pre>\n<h2>3.1 <code>config/deploy.yml</code></h2>\n<pre><code class=\"language-yml\"># Name of your application. Used to uniquely configure containers.\nservice: rails-kamal-deployed-to-azure\n\n# Name of the container image.\nimage: serv/rails-kamal-deployed-to-azure\n\n# Deploy to these servers.\nservers:\n  - 74.235.199.96\n\n# Credentials for your image host.\nregistry:\n  # Specify the registry server, if you're not using Docker Hub\n  server: railskamaldeployedtoazure.azurecr.io\n  username: railskamaldeployedtoazure\n\n  # Always use an access token rather than real password when possible.\n  password:\n    - KAMAL_REGISTRY_PASSWORD\n# Inject ENV variables into containers (secrets come from .env).\n# Remember to run `kamal env push` after making changes!\nenv:\n  #   clear:\n  #     DB_HOST: 192.168.0.2\n  secret:\n    - RAILS_MASTER_KEY\n# Use a different ssh user than root\nssh:\n  user: azureuser\n\n# To use Sqlite\nbuilder:\n  context: .\nvolumes:\n  - 'storage:/rails/storage'\n</code></pre>\n<h2>3.2 <code>dotenv kamal setup</code></h2>\n<ul>\n<li>You may get this error: <code>permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock</code> when you run <code>dotenv kamal setup</code> for the first time.</li>\n<li>For this run <code>sudo usermod -aG docker ${USER}</code> <a href=\"https://github.com/basecamp/kamal/issues/405#issuecomment-1652527208\">[1]</a></li>\n<li>If the command runs successfully, you should see</li>\n</ul>\n<pre><code>  INFO [f489cd69] Finished in 0.326 seconds with exit status 0 (successful).\n  Finished all in 87.1 seconds\nReleasing the deploy lock...\n  Finished all in 91.9 seconds\n</code></pre>\n<ul>\n<li>\n<p>Try going to the IP address of the load balancer.</p>\n<ul>\n<li><img src=\"/images/2024/9/16/lbloading.png\"></li>\n</ul>\n</li>\n<li>\n<p>Also you may or may not need <code>dotenv</code> in front of running <code>kamal setup</code>.</p>\n<ul>\n<li>There were changes to how Kamal 2 handles secret environment variables, and to force load the secret variables <code>dotenv</code> is needed.</li>\n<li><a href=\"https://github.com/basecamp/kamal/discussions/977\">More on this</a></li>\n</ul>\n</li>\n</ul>\n"}},"__N_SSG":true}