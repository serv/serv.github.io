{"pageProps":{"post":{"title":"Setup a .NET project on Mac OSX","createdAt":"2024-08-31T10:03:43-07:00","categories":[],"slug":"setup-a-net-project-on-mac-osx","fullPath":"/Users/jasonkim/projects/websites/serv.github.io/_posts/2024-08-31-setup-a-net-project-on-mac-osx.md","content":"<p>We will create a new .NET project on Mac OSX using VSCode.</p>\n<h1>Setup .NET Development environment</h1>\n<ol>\n<li>Follow instructions on this <a href=\"https://dev.to/rusydy/setting-up-net-on-macos-a-step-by-step-guide-14db\">link</a>.</li>\n</ol>\n<h2>Updating to the latest .NET environment</h2>\n<p>There's a chance that you had prepped .NET development environment years ago. In such case, we want to update to the latest .NET development environment.</p>\n<ol>\n<li>Update Homebrew</li>\n</ol>\n<ul>\n<li><code>$ brew update</code></li>\n</ul>\n<ol start=\"2\">\n<li>Install .NET using Homebrew</li>\n</ol>\n<ul>\n<li><code>$ brew install --cask dotnet-sdk</code></li>\n</ul>\n<ol start=\"3\">\n<li>If you already had installed it before but want to get the latest,</li>\n</ol>\n<ul>\n<li><code>$ brew upgrade dotnet-sdk</code></li>\n</ul>\n<ol start=\"4\">\n<li>Verify</li>\n</ol>\n<ul>\n<li><code>$ dotnet --version</code></li>\n<li>Should 8.0.401 as of Aug 31, 2024</li>\n</ul>\n<h1>Setup a .NET project</h1>\n<ul>\n<li>I am following the <a href=\"https://learn.microsoft.com/en-us/dotnet/core/testing/unit-testing-with-dotnet-test\">instruction here</a>.</li>\n<li>If you want to follow the same instructions with my concise commentary, follow instructions below.</li>\n</ul>\n<ol>\n<li>Create a .NET project (aka \"Solution\")</li>\n</ol>\n<ul>\n<li><code>$ dotnet new sln -o project-with-tests</code></li>\n</ul>\n<ol start=\"2\">\n<li><code>cd project-with-tests</code></li>\n<li>Creates a new class library project in the SuperMassive folder.</li>\n</ol>\n<ul>\n<li><code>dotnet new classlib -o SuperMassive</code></li>\n</ul>\n<ol start=\"4\">\n<li>\n<p>Rename Class1.cs to SuperMassive.cs.</p>\n</li>\n<li>\n<p>Inside the project, have the following content.</p>\n<pre><code class=\"language-csharp\">namespace SuperMassiveNS;\n\npublic class SuperMassive\n{\n\n}\n</code></pre>\n</li>\n</ol>\n<ul>\n<li>Notice that the namespace is <code>SuperMassiveNS</code> in order to avoid collision with the class name.</li>\n</ul>\n<ol start=\"6\">\n<li>Build</li>\n</ol>\n<ul>\n<li><code>$ dotnet build</code></li>\n</ul>\n<ol start=\"7\">\n<li>Add class library to the solution</li>\n</ol>\n<ul>\n<li><code>$ dotnet sln add ./SuperMassive/SuperMassive.csproj</code></li>\n</ul>\n<ol start=\"8\">\n<li>Create tests</li>\n</ol>\n<ul>\n<li><code>$ dotnet new xunit -o SuperMassive.Tests</code></li>\n</ul>\n<ol start=\"9\">\n<li>Add the tests to the solution</li>\n</ol>\n<ul>\n<li><code>$ dotnet sln add ./SuperMassive.Tests/SuperMassive.Tests.csproj</code></li>\n</ul>\n<ol start=\"10\">\n<li>Add SuperMassive as a dependency to SuperMassive.Tests</li>\n</ol>\n<ul>\n<li><code>$ dotnet add ./SuperMassive.Tests/SuperMassive.Tests.csproj reference ./SuperMassive/SuperMassive.csproj</code>  </li>\n</ul>\n<ol start=\"11\">\n<li>Create a test to check that the tests can reference the source class.</li>\n</ol>\n<ul>\n<li>\n<p>Rename the test file name</p>\n<ul>\n<li>SuperMassiveTests.cs</li>\n</ul>\n</li>\n<li>\n<p>Update the content of the test</p>\n<pre><code class=\"language-csharp\">namespace SuperMassive.Tests;\n\npublic class SuperMassiveTests\n{\n    [Fact]\n    public void ReferenceSourceTest()\n    {\n        var superMassive = new SuperMassiveNS.SuperMassive();\n    }\n}\n</code></pre>\n</li>\n</ul>\n<ol start=\"12\">\n<li>Run the tests!</li>\n</ol>\n<ul>\n<li><code>$ dotnet test</code></li>\n</ul>\n"}},"__N_SSG":true}