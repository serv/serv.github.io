{"pageProps":{"post":{"title":"Setting up Dokku on DigitalOcean using Ubuntu 14.10 x64","createdAt":"2014-12-08T00:00:00-08:00","categories":["sysadmin","deployment"],"slug":"setting-up-dokku-on-digitalocean-using-ubuntu-1410-x64","fullPath":"/home/jason/projects/websites/serv.github.io/_posts/2014-12-08-setting-up-dokku-on-digitalocean-using-ubuntu-14-dot-10-x64.md","content":"<p>Note: this is still incomplete.</p>\n<h2>Prerequisites</h2>\n<ul>\n<li>Minimal understanding of what Dokku, DigitalOcean and Ubuntu ara</li>\n<li>Already has DigitalOcean account</li>\n<li>Knows basics of SSH</li>\n</ul>\n<h2>Creating DigitalOcean Droplet</h2>\n<ol>\n<li>Sign into DigitalOcean and click on the button, \"CREATE\" on the left sidebar.</li>\n<li>Insert a good Droplet Hostname and select the size of the droplet that suits\nyour application.</li>\n<li>Select the region. I'm choosing the default one, which is NY3.</li>\n<li>In \"Select Image\" section, click on \"Linux Distributions\" tab.</li>\n<li>Click on Ubuntu and select <strong>14.10 x64</strong>.</li>\n<li>We will create and add a new SSH key manually. DO NOT select any SSH key\ndisplayed under \"Add SSH Keys\" section.</li>\n<li>Click on \"Create Droplet\"</li>\n</ol>\n<h2>Logging into the new server for the first time</h2>\n<ol>\n<li>You should have received an email that contains your host IP address,\nusername and the password. Keep the password as secret! Username is <code>root</code> by\ndefault.</li>\n<li>Log into the host server using the username. <code>$ ssh root@123.123.123.123</code>\nReplace <code>123.123.123.123</code> with your host ip address.</li>\n<li>Type <code>yes</code> to the question <code>Are you sure you want to continue connecting (yes/no)?</code> and press Enter.</li>\n<li>Copy and paste the root password that was emailed to you.</li>\n<li>The server will prompt you to update your password. Follow the instructions\ngiven to you and update the password.</li>\n</ol>\n<h2>Creating public key on your local machine</h2>\n<ol>\n<li>On your local computer's terminal, run <code>$ cd ~/.ssh</code></li>\n<li>Run <code>$ ssh-keygen -t rsa -C \"your_email@example.com\"</code></li>\n<li>To the question, <code>Enter file in which to save the key (/Users/you/.ssh/id_rsa): </code>, type in the host name of the DigitalOcean droplet you just create. Just\ngood practise to have the same name.</li>\n<li>Enter the password for the pubkey you just created. This doesn't have to\nbe the same as the root password you changed earlier.</li>\n<li>Run <code>$ cat key-you-created.pub</code> to check that pubkey was created successfully.</li>\n<li>Copy the result of <code>$ cat key-you-created.pub</code> in the local machine.</li>\n</ol>\n<h2>Adding the new SSH Key in DigitalOcean</h2>\n<ol>\n<li>Log into DigitalOcean</li>\n<li>Click on \"SSH Keys\" on the left hand side.</li>\n<li>Click on \"Add SSH Keys\" on the top right hand side.</li>\n<li>Paste the pubkey content in the form and submit it.</li>\n</ol>\n<h2>Configuring your local machine to use this specific new pubkey</h2>\n<p>when connecting to the server</p>\n<ol>\n<li>In the local machine, run <code>$ vi ~/.ssh/config</code></li>\n<li>Add the following lines.</li>\n</ol>\n<p>{% highlight text %}\nHost [some-host-name-nickname]\nHostname     [123.123.123.123].\nUser         root\nIdentityFile ~/.ssh/[key-you-created]\n{% endhighlight %}</p>\n<ol start=\"3\">\n<li>Replace all the data in <code>[]</code>.</li>\n</ol>\n<h2>Authenticating yourself against the server</h2>\n<ol>\n<li>In the server console run <code>$ cd ~/.ssh</code></li>\n<li>Again, in the server, run <code>$ echo \"ssh-rsa [paste the content of key-you-created.pub]\" >> authorized_keys</code>.</li>\n<li>Run <code>$ cat authorized_keys</code> and check that your local machine's pubkey is\nin the list of authorized_keys in the server.</li>\n</ol>\n<h2>Phew, take a breather</h2>\n<p>If everything went right, you should be able to do, <code>$ ssh root@some-host-name-nickname</code>.</p>\n<h2>Installing Dokku</h2>\n<ol>\n<li>I am largely following <a href=\"http://progrium.viewdocs.io/dokku/installation\">the official installation doc for Dokku</a>.</li>\n<li>On the server, run <code>$ wget -qO- https://raw.github.com/progrium/dokku/v0.3.7/bootstrap.sh | sudo DOKKU_TAG=v0.3.7 bash</code></li>\n<li><code>$ cat ~/.ssh/supurl-production.pub | ssh root@104.131.160.133 \"sudo sshcommand acl-add dokku $USER\"</code></li>\n<li><code>$ git remote add dokku dokku@supurl-production:supurl-production</code></li>\n</ol>\n<h2>Troubleshooting various errors</h2>\n<p>{% highlight text %}\ngit push dokku master\nCounting objects: 1012, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (772/772), done.\nWriting objects: 100% (1012/1012), 109.41 KiB | 0 bytes/s, done.\nTotal 1012 (delta 526), reused 298 (delta 137)\n-----> Cleaning up ...\n-----> Building supurl-production ...\nRuby app detected\n-----> Compiling Ruby/Rails\n-----> Using Ruby version: ruby-2.0.0\n-----> Installing dependencies using 1.5.2\nNew app detected loading default bundler cache\n!\n!     Command: 'set -o pipefail; curl --fail --retry 3 --retry-delay 1 --connect-timeout 3 --max-time 30 <a href=\"https://s3-external-1.amazonaws.com/heroku-buildpack-ruby/ruby-2.0.0-p481-default-cache.tgz\">https://s3-external-1.amazonaws.com/heroku-buildpack-ruby/ruby-2.0.0-p481-default-cache.tgz</a> -s -o - | tar zxf -' failed unexpectedly:\n!\n!     gzip: stdin: unexpected end of file\n!     tar: Child returned status 1\n!     tar: Error is not recoverable: exiting now\n!\nTo dokku@supurl-production:supurl-production\n! [remote rejected] master -> master (pre-receive hook declined)\nerror: failed to push some refs to 'dokku@supurl-production:supurl-production'\n{% endhighlight %}</p>\n<p>Build pack error.\n<a href=\"https://github.com/heroku/heroku-buildpack-ruby/issues/304\">https://github.com/heroku/heroku-buildpack-ruby/issues/304</a></p>\n<p>{% highlight text %}\nI, [2014-12-09T01:09:50.397656 #12]  INFO -- : listening on addr=0.0.0.0:5000 fd=10\nE, [2014-12-09T01:09:50.403558 #12] ERROR -- : could not connect to server: No such file or directory\nIs the server running locally and accepting\nconnections on Unix domain socket \"/var/run/postgresql/.s.PGSQL.5432\"?\n(PG::ConnectionBad)\n/app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_adapters/postgresql_adapter.rb:888:in <code>initialize' /app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_adapters/postgresql_adapter.rb:888:in </code>new'\n/app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_adapters/postgresql_adapter.rb:888:in <code>connect' /app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_adapters/postgresql_adapter.rb:568:in </code>initialize'\n/app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_adapters/postgresql_adapter.rb:41:in <code>new' /app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_adapters/postgresql_adapter.rb:41:in </code>postgresql_connection'\n/app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_adapters/abstract/connection_pool.rb:435:in <code>new_connection' /app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_adapters/abstract/connection_pool.rb:445:in </code>checkout_new_connection'\n/app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_adapters/abstract/connection_pool.rb:416:in <code>acquire_connection' /app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_adapters/abstract/connection_pool.rb:351:in </code>block in checkout'\n/app/vendor/ruby-2.1.5/lib/ruby/2.1.0/monitor.rb:211:in <code>mon_synchronize' /app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_adapters/abstract/connection_pool.rb:350:in </code>checkout'\n/app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_adapters/abstract/connection_pool.rb:265:in <code>block in connection' /app/vendor/ruby-2.1.5/lib/ruby/2.1.0/monitor.rb:211:in </code>mon_synchronize'\n/app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_adapters/abstract/connection_pool.rb:264:in <code>connection' /app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_adapters/abstract/connection_pool.rb:541:in </code>retrieve_connection'\n/app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_handling.rb:113:in <code>retrieve_connection' /app/vendor/bundle/ruby/2.1.0/gems/activerecord-4.1.6/lib/active_record/connection_handling.rb:87:in </code>connection'\n./config/unicorn.rb:15:in <code>block in reload' /app/vendor/bundle/ruby/2.1.0/gems/unicorn-4.8.3/lib/unicorn/http_server.rb:519:in </code>call'\n/app/vendor/bundle/ruby/2.1.0/gems/unicorn-4.8.3/lib/unicorn/http_server.rb:519:in <code>spawn_missing_workers' /app/vendor/bundle/ruby/2.1.0/gems/unicorn-4.8.3/lib/unicorn/http_server.rb:140:in </code>start'\n/app/vendor/bundle/ruby/2.1.0/gems/unicorn-4.8.3/bin/unicorn:126:in <code>&#x3C;top (required)>' /app/vendor/bundle/ruby/2.1.0/bin/unicorn:23:in </code>load'\n/app/vendor/bundle/ruby/2.1.0/bin/unicorn:23:in `<main>'\n{% endhighlight %}</p>\n<p><code>$ dokku postgresql:create supurl-production</code></p>\n<p><a href=\"http://dev.housetrip.com/2014/07/06/deploy-rails-and-postgresql-app-to-dokku/\">http://dev.housetrip.com/2014/07/06/deploy-rails-and-postgresql-app-to-dokku/</a></p>\n<p><code>dokku run APP_NAME rake db:seed </code></p>\n<p>{% highlight text %}</p>\n<h1>installing the plugin</h1>\n<p>cd /var/lib/dokku/plugins\ngit clone <a href=\"https://github.com/Kloadut/dokku-pg-plugin\">https://github.com/Kloadut/dokku-pg-plugin</a> postgresql\ndokku plugins-install</p>\n<h1>Create and setup the db</h1>\n<p>dokku postgresql:create <db-name></p>\n<h1>Once you've deployed your app once, you can link the db to the app like:</h1>\n<p>dokku postgresql:link <app-name> <db-name>\n{% endhighlight %}</p>\n<p>{% highlight text %}\nremote: runtime: panic before malloc heap initialized\nremote: fatal error: runtime: cannot allocate heap metadata\nTo dokku@supurl-production:supurl-production\n! [remote rejected] master -> master (pre-receive hook declined)\nerror: failed to push some refs to 'dokku@supurl-production:supurl-production'\n{% endhighlight %}</p>\n<p><a href=\"https://github.com/docker/docker/issues/1555\">https://github.com/docker/docker/issues/1555</a>\n<a href=\"http://stackoverflow.com/a/17174672/536890\">http://stackoverflow.com/a/17174672/536890</a></p>\n"}},"__N_SSG":true}