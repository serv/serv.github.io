<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jason Kim</title>
    <description>Writings on software and other topics
</description>
    <link>http://jasonkim.ca/</link>
    <atom:link href="http://jasonkim.ca/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 25 Nov 2017 22:05:31 -0800</pubDate>
    <lastBuildDate>Sat, 25 Nov 2017 22:05:31 -0800</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>Using ActiveStorage Today (prior to Rails 5.2 release)</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://weblog.rubyonrails.org/2017/7/15/this-week-in-rails-active-storage-telling-secrets-and-time-travelling/&quot;&gt;DHH announced earlier in the year that Rails 5.2 will have a brand new component called ActiveStorage&lt;/a&gt;.
ActiveStorage will manage user uploads such as photos directly by Rails.&lt;/p&gt;

&lt;p&gt;Since then, a lot of progress has been made to integrate ActiveStorage to
Rails, and you can actually use ActiveStorage today. This blog will explore
the how you can update your Rails app to use ActiveStorage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Warning!&lt;/strong&gt; You will be using the bleeding edge version of Rails and
there may be unforseen problems caused by it.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-activestorage-for-rails&quot;&gt;Setting up ActiveStorage for Rails&lt;/h2&gt;

&lt;h4 id=&quot;1-if-you-are-using-rails-version-before-5114-update-rails-to-5114-by-updating-your-gemfile&quot;&gt;1. If you are using Rails version before 5.1.14, update Rails to 5.1.14 by updating your Gemfile&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rails'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 5.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;gt;= 5.1.4'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;2-run--bundle-update-rails&quot;&gt;2. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ bundle update rails&lt;/code&gt;&lt;/h4&gt;

&lt;h4 id=&quot;3-run--rails-appupdate-and-resolve-any-code-differences&quot;&gt;3. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ rails app:update&lt;/code&gt; and resolve any code differences.&lt;/h4&gt;

&lt;h4 id=&quot;4-test-that-updating-to-5114-went-ok&quot;&gt;4. Test that updating to &lt;code class=&quot;highlighter-rouge&quot;&gt;5.1.14&lt;/code&gt; went ok.&lt;/h4&gt;

&lt;h4 id=&quot;5-now-we-want-to-update-rails-to-the-latest-bleeding-edge-version-in-the&quot;&gt;5. Now we want to update rails to the latest bleeding edge version. In the&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;, add the following lines.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;git_source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repo_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;repo_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repo_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repo_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repo_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repo_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.git&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rails'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;github: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'rails/rails'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'arel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;git: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://github.com/rails/arel.git'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bootsnap'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 1.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;gt;= 1.1.5'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;require: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;6-run--bundle-update-rails&quot;&gt;6. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ bundle update rails&lt;/code&gt;&lt;/h4&gt;

&lt;h4 id=&quot;7--bundle-exec-rails--v-should-display-the-bleeding-edge-version&quot;&gt;7. &lt;code class=&quot;highlighter-rouge&quot;&gt;$ bundle exec rails -v&lt;/code&gt; should display the bleeding edge version,&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Rails 5.2.0.alpha&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;8-update-the-application-configs-run--bundle-exec-rails-appupdate&quot;&gt;8. Update the application configs. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ bundle exec rails app:update&lt;/code&gt;.&lt;/h4&gt;

&lt;h4 id=&quot;9-when-you-run--binrails---tasks-you-should-see&quot;&gt;9. When you run, &lt;code class=&quot;highlighter-rouge&quot;&gt;$ ./bin/rails --tasks&lt;/code&gt;, you should see,&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rails active_storage:install&lt;/code&gt; as an available task.&lt;/p&gt;

&lt;h4 id=&quot;10-run--binrails-active_storageinstall-this-should-generate-a-migration-file&quot;&gt;10. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ ./bin/rails active_storage:install&lt;/code&gt;. This should generate a migration file.&lt;/h4&gt;

&lt;h4 id=&quot;11-run--binrails-dbmigrate-now-our-sqlite-db-should-be-ready-to-support-activestorage&quot;&gt;11. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ ./bin/rails db:migrate&lt;/code&gt;. Now our sqlite db should be ready to support ActiveStorage.&lt;/h4&gt;

&lt;h2 id=&quot;a-simple-image-uploading-example-using-activestorage&quot;&gt;A simple image uploading example using ActiveStorage&lt;/h2&gt;

&lt;p&gt;Up until now, we’ve been preparing Rails application to support ActiveStorage.
Now that the application is equipped with ActiveStorage, let us build a
simple feature that allows us to create a post with images
that uses ActiveStorage.&lt;/p&gt;

&lt;h4 id=&quot;1-generate-post-model--binrails-g-model-post&quot;&gt;1. Generate post model. &lt;code class=&quot;highlighter-rouge&quot;&gt;$ ./bin/rails g model post&lt;/code&gt;.&lt;/h4&gt;

&lt;h4 id=&quot;2-lets-add-two-columns-to-post-table-title-body-in-the-migration-file&quot;&gt;2. Let’s add two columns to post table, &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt; in the migration file.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# db/migrate/20171114063756_create_posts.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CreatePosts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:posts&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:body&lt;/span&gt;

     &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;timestamps&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;3-lets-create-a-controller-for-posts-resource&quot;&gt;3. Let’s create a controller for posts resource.&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ ./bin/rails g controller posts&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;4-and-add-posts-resources-routes-in-the-configroutesrb&quot;&gt;4. And add posts resources routes in the &lt;code class=&quot;highlighter-rouge&quot;&gt;config/routes.rb&lt;/code&gt;.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:posts&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;5-we-need-to-associate-post-with-images&quot;&gt;5. We need to associate post with images.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationRecord&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;has_many_attached&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:images&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;6-lets-add-code-for-index-show-and-create-actions&quot;&gt;6. Let’s add code for index, show and create actions.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# app/controllers/posts_controller.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PostsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# we will display post form here&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# we will create post here&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create!&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;permit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# we will display post with photo&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;7-add-the-index-view-for-the-post-with-the-following-code-this-will-display-upload-form-on-localhost3000posts-page&quot;&gt;7. Add the index view for the post with the following code. This will display upload form on localhost:3000/posts page.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;# app/views/posts/index.html.erb
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form_with&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;model: &lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;local: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text_field&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;placeholder: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Title&quot;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text_area&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:body&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;file_field&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;multiple: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;submit&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;8-now-lets-add-a-view-for-show-post&quot;&gt;8. Now let’s add a view for show post.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;# app/views/posts/show.html.erb
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image_tag&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;9-try-submitting-a-photo-and-you-will-see-the-show-view-displays-the-image-you-just-submitted&quot;&gt;9. Try submitting a photo and you will see the show view displays the image you just submitted.&lt;/h4&gt;
&lt;p&gt;The image is currently stored locally in a
directory called &lt;code class=&quot;highlighter-rouge&quot;&gt;storage&lt;/code&gt; in the app root level. But you can configure
this to push the files to cloud file storage systems like AWS S3, Google Cloud
and Azure.&lt;/p&gt;

&lt;p&gt;As you can see, ActiveStorage presents a simplied file management system
that is well integrated with Rail’s ActiveRecord component.
As ActiveStorage matures, we should see majority of
file management use cases being covered by it.
While there are other file management systems out there for Rails, I suggest that
you consider ActiveStorage before you explore other options.&lt;/p&gt;

&lt;p&gt;Also check out &lt;a href=&quot;https://github.com/rails/rails/blob/master/activestorage/README.md&quot;&gt;the documentation on ActiveStorage&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can see the final working code on the &lt;a href=&quot;https://github.com/serv/rails-alpha-activestorage-example&quot;&gt;github repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wanna thank &lt;a href=&quot;https://twitter.com/jeffreyguenther&quot;&gt;@jeffreyguenther&lt;/a&gt; who
shared his experience of using ActiveStorage on his projects with me.&lt;/p&gt;

</description>
        <pubDate>Mon, 13 Nov 2017 11:17:11 -0800</pubDate>
        <link>http://jasonkim.ca/blog/2017/11/13/Using-ActiveStorage-Today/</link>
        <guid isPermaLink="true">http://jasonkim.ca/blog/2017/11/13/Using-ActiveStorage-Today/</guid>
        
        
        <category>ruby on rails</category>
        
      </item>
    
      <item>
        <title>Setting up Typescript</title>
        <description>&lt;p&gt;I have been using &lt;a href=&quot;https://babeljs.io/learn-es2015/&quot;&gt;ES2015 actively using Babe.js&lt;/a&gt;
and I was already convinced that compiling more dev-friendly language to
javascript is useful. One of the langauges that has been praised a lot in
this domain is &lt;a href=&quot;https://www.typescriptlang.org/index.html&quot;&gt;Typescript&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;install-typescript&quot;&gt;Install Typescript&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ yarn global add typescript&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you get an error saying &lt;code class=&quot;highlighter-rouge&quot;&gt;tsc&lt;/code&gt; command is not found, check out this
&lt;a href=&quot;https://stackoverflow.com/a/40333409/536890&quot;&gt;SO answer&lt;/a&gt; on this issue.&lt;/p&gt;

&lt;h3 id=&quot;linked-list-in-typescript&quot;&gt;Linked list in Typescript&lt;/h3&gt;

&lt;p&gt;Here is a linked list you can start to play with written in Typescript.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// index.ts&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./node'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;tail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// list.ts&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./node'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;tail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// node.ts&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now compile typescript into javascript.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ tsc index.ts&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This should generate &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;list.js&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;node.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let’s run these javascript files.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ node index.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This should print&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3
2
1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;what-i-think-about-typescript-after-using-it-for-an-hour&quot;&gt;What I think about Typescript after using it for an hour&lt;/h3&gt;

&lt;p&gt;Learning Typescript was intuitive and JS I was writing felt more precise
and controlled. This allowed me write less error prone javascript in
a short period time. I should learn more about tooling around Typescript
so that it feels more integrated into the javascript development
workflow.&lt;/p&gt;

</description>
        <pubDate>Sun, 05 Nov 2017 13:40:28 -0800</pubDate>
        <link>http://jasonkim.ca/blog/2017/11/05/typescript/</link>
        <guid isPermaLink="true">http://jasonkim.ca/blog/2017/11/05/typescript/</guid>
        
        
        <category>typescript</category>
        
      </item>
    
      <item>
        <title>What I learned upgrading a large Ember.js project from v2.3.0 to v2.12.1</title>
        <description>&lt;p&gt;I worked on upgrading a ~19 KLOC Ember.js codebase.
The previous Ember.js version was 2.3.0.
Now it is 2.12.1. Here, I am going to discuss why I had to upgrade
Ember.js, general approach to solving problems while upgrading a
framework.&lt;/p&gt;

&lt;p&gt;For a long time, Ember.js version 2.3.0 served us just fine. The framework
pretty much provided us with everything we needed out of
the box and small flaws here and there didn’t bother us. However, over
time, there started to arise several glaring problems with using an
older Ember.js version.&lt;/p&gt;

&lt;p&gt;As our app grew larger with some pages generating a large number of
components in a view, we experienced noticeable performance degredation in
DOM rendering. To mitigate this problem, we used an alternative way to
render components, &lt;a href=&quot;https://www.npmjs.com/package/ember-cli-raw-handlebars&quot;&gt;ember-cli-raw-handlebars&lt;/a&gt; which stripped away much of Ember related functionalities from the view
in order to increase the DOM rendering speed. The trade off for this was
introducing the “none-Ember.js” way of organizing our codebase, which made
our codebase look rather messy.&lt;/p&gt;

&lt;p&gt;Using older Ember.js also made it hard to use newer packages out in the wild.
When we wanted to introduce a new package or upgrade an existing package
to a newer version, the Ember framework started to throw cryptic errors
that were hard to debug and fix. The cost of not upgrading Ember.js became
greater than the convenience of relying on an older Ember.js.&lt;/p&gt;

&lt;h2 id=&quot;procedure-to-upgrade-emberjs&quot;&gt;Procedure to upgrade Ember.js&lt;/h2&gt;

&lt;p&gt;Ember v2.3.0 came out on Jan 17, 2016. A lot has changed since then. Simply
bumping the Ember version to the latest simply will not work. There will
be a lot of noticeable and unnoticeable bugs from doing that. Fixing those bugs
all at once is very difficult. I built a procedure to safely upgrade Ember.js
without creating tons of regressions.&lt;/p&gt;

&lt;p&gt;I needed Ember.js upgrade only branch on beta environment. Upgrading Ember.js
of a large endeavor takes a long time. Most likely, you will be asked to develop
features and fix bugs while you are working on upgrade Ember. For that reason,
preparing an isolated Ember.js upgrade only branch on beta will be
useful to allow QA to test the branch while you are working on other features.&lt;/p&gt;

&lt;p&gt;I wrote more automated tests. While I was making changes to the Ember.js
upgrade branch, I needed to make sure that I wasn’t breaking things while
I fix an issue. Automated tests helped me make sure that I make
safe changes that are tested.&lt;/p&gt;

&lt;p&gt;Since your team most likely will QA and review your changes, they will
also need to know how to prepare the development environment for the
Ember upgrade and how to bring it back to their own normal development
environment. I made sure this is clearly described and communicated to
others.&lt;/p&gt;

&lt;p&gt;Having some dedicated QA time is also really important. Framework update
touches all aspects of the app, and every core functionalities need to
be tested thoroughly before the change is released on production.&lt;/p&gt;

&lt;p&gt;I used binary search like algorithm to bump the versions to the move towards
the latest version.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;next_non_erroring_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destination_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_version&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destination_version&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;half_way&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;destination_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;causes_error?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;half_way&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;next_non_erroring_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;half_way&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;next_non_erroring_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;half_way&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destination_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;next_non_erroring_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2.3.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2.12.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The method above tries to find the first version closest to the original
version to causes error.&lt;/p&gt;

</description>
        <pubDate>Sun, 28 May 2017 13:00:00 -0700</pubDate>
        <link>http://jasonkim.ca/blog/2017/05/28/upgrading-ember/</link>
        <guid isPermaLink="true">http://jasonkim.ca/blog/2017/05/28/upgrading-ember/</guid>
        
        
        <category>software development</category>
        
      </item>
    
      <item>
        <title>My Macbook Alternative</title>
        <description>&lt;p&gt;I started using Macs since 2011. My first Mac is 13-inch MacBook Pro from
Late 2011. It was a versatile laptop which I was happy to pay a slight
premium for. It served me well through out my school years and
it was a perfect development box.
It was ideal for light amount of gaming to destress as well. Over the years,
the machine started to wear out, it’s become sluggish to the point where
I could no longer be productive anymore. It was time to look for another
laptop.&lt;/p&gt;

&lt;p&gt;I considered purchasing a 2016 Macbook pro, but the specs were lagging behind
its contemporaries in the same price range. It used to be that I would be
paying 100 to 200 bucks more for the mac when compared to PCs that have
similar specs. Compare to that, now I was looking at paying from 400 to 700
bucks more for the mac. This was unacceptable. I decided to buy a PC instead.
For daily usage of web browsing and gaming, I planned to use Windows 10 and
for software development, I planned to use Ubuntu installed on the same
machine.&lt;/p&gt;

&lt;p&gt;I decided to buy &lt;a href=&quot;https://smile.amazon.com/gp/product/B01DT4A2R4/ref=oh_aui_detailpage_o07_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;Acer Aspire E 15&lt;/a&gt; for $509.99. This was an amazing bargain for a
laptop that has ok cpu, acceptable ram and usable discrete graphics card.
Also, the main harddrive offered is an SSD. The laptop comes with 4 USB ports
and a SD card reader which is perfect for me who wants to get into
photography.&lt;/p&gt;

&lt;p&gt;I decided to upgrade 2 things hardware wise. First I wanted to increase my
storage. The machine comes with 250 GB SSD, but given that I want to play
games and store many photographs, I needed a larger harddrive. Also when
I partition the harddrive for Ubuntu, I wanted to leave myself at least 100 GB
for development. I bought &lt;a href=&quot;https://smile.amazon.com/gp/product/B00B4QESVQ/ref=oh_aui_detailpage_o02_s01?ie=UTF8&amp;amp;psc=1&quot;&gt;HGST Travelstar 7K1000 2.5-Inch 1TB&lt;/a&gt; for $61.99.
That left me with extra 1 TB of storage to play with.&lt;/p&gt;

&lt;p&gt;Also another easy upgrade that I decided to make is doubling my memory.
I bought &lt;a href=&quot;https://smile.amazon.com/gp/product/B015HQ9TGW/ref=oh_aui_detailpage_o02_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;Crucial 8 GB DDR 2133 MT/s RAM&lt;/a&gt; for $44.99.&lt;/p&gt;

&lt;p&gt;Installations for these parts are extremely easy, and tutorials can be found
easily online.&lt;/p&gt;

&lt;p&gt;And finally dualbooting Ubuntu on the machine requires some preparation, but
it’s definitely doable and just having UNIX compatible terminal beats all
the effort required to set it up in the first place.&lt;/p&gt;

&lt;p&gt;Overall, preparing a personal development machine that is able to play some
games at $616.97 was totally worth it.&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Jan 2017 13:56:59 -0800</pubDate>
        <link>http://jasonkim.ca/blog/2017/01/01/my-macbook-pro-alternative/</link>
        <guid isPermaLink="true">http://jasonkim.ca/blog/2017/01/01/my-macbook-pro-alternative/</guid>
        
        
        <category>software development</category>
        
      </item>
    
      <item>
        <title>Tips for Transitioning to a New Team or a New Job</title>
        <description>&lt;p&gt;I recently had to transition to a web team from an API team at work.
It was a difficult transition, but overall, it’s a transition that I
am really happy about. I like the new team and the new learning
opportunities transitioning to a new team allows me.
I bet starting a new job probably results in a similar situation, but
with a bigger scope of new work to learn about. Here are some tips
for someone who’s starting a new job or transitioning to a work
that will help you to get use to the new tasks as a software engineer.&lt;/p&gt;

&lt;h2 id=&quot;1-learn-the-directory-structure-of-the-codebase&quot;&gt;1. Learn the directory structure of the codebase&lt;/h2&gt;

&lt;p&gt;Learning 100% of the codebase in a short period of time is difficult.
This can be made easier by having someone explain the directory
structure of the codebase for you. Once you understand the context
of the directory sturcture, smaller parts of the codebase can be
made more sense easier.&lt;/p&gt;

&lt;h2 id=&quot;2-ask-questions-to-the-teammembers&quot;&gt;2. Ask questions to the teammembers&lt;/h2&gt;

&lt;p&gt;You have the experts of the codebase sitting around you. Ask them
questions and get the answers you need.
Have the questions be about things that you can’t figure out on
your own. For example, questions about codebase can be figured
out on your own with some struggles, but questions about how
Akamai cache is set up, how deployment works, how testing works,
how oncall process works, etc can’t be figured out on your own.
So for these things, you have ask questions.&lt;/p&gt;

&lt;h2 id=&quot;3-have-a-vision&quot;&gt;3. Have a vision&lt;/h2&gt;

&lt;p&gt;You should have a vision for your own work aside from the day
to day work at the team. This was a better advice I’ve received
from a coworker, and he is right. Doing your day to day job well
makes you a good engineer. If you have a vision about the project
you work on and attempt to improve the product with a vision,
you can be a great engineer. You have to ensure that your vision
is aligned with the product vision, team vision and the company
vision.&lt;/p&gt;
</description>
        <pubDate>Sun, 13 Nov 2016 08:45:58 -0800</pubDate>
        <link>http://jasonkim.ca/blog/2016/11/13/starting-a-new-job-or-transitioning-to-a-new-team/</link>
        <guid isPermaLink="true">http://jasonkim.ca/blog/2016/11/13/starting-a-new-job-or-transitioning-to-a-new-team/</guid>
        
        
        <category>career</category>
        
      </item>
    
      <item>
        <title>Easily Overlook Parts on Developing REST API</title>
        <description>&lt;p&gt;I recently transitioned off the API team and moved
work on web client team at work. I wanted to share
some things I wish I had known when I was deepdiving
in developing REST API.&lt;/p&gt;

&lt;h2 id=&quot;1-stability-uber-alles&quot;&gt;1. Stability uber alles&lt;/h2&gt;

&lt;p&gt;You can drop nearly everything on the ground and
focus on restoring stability of the API. No one
will mind.&lt;/p&gt;

&lt;h2 id=&quot;2-versioned-api-from-the-start&quot;&gt;2. Versioned API from the start&lt;/h2&gt;

&lt;p&gt;APIs are suppose to return consistent data that’s
been agreed by the server and the client. There
are times when the server must change the response
body structure to serve the needs of some clients
better. You should not change the response structure
for a given endpoint in such case. You should
version your API so that you can serve the needs
of the old clients and new clients equally well.&lt;/p&gt;

&lt;p&gt;Versioning can easily be a topic of conversation
on its own, but here are several considerations
you need to make when you implement versioning.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Where is versioning going to occur?
At load balancer or at app?&lt;/li&gt;
  &lt;li&gt;Is it going to be done via header or url?&lt;/li&gt;
  &lt;li&gt;How are you going to isolate the code change to
remain within a specific version? Also while
ensuring that the versioning doesn’t make coding
any more difficult.&lt;/li&gt;
  &lt;li&gt;How will you automatically test the newly
versioned APIs?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-use-api-specs&quot;&gt;3. Use API specs&lt;/h2&gt;

&lt;p&gt;Make use of spec to come to an agreement between
you and the clients before building the API.
You will be able to serve their needs better and
also possibly explain to the clients your limitations.&lt;/p&gt;

&lt;h2 id=&quot;4-load-testing&quot;&gt;4. Load testing&lt;/h2&gt;

&lt;p&gt;I didn’t realize how important this is until
our production environment was adversely affected
by some feature changes we made without properly
load testing them first. Develop a load testing
strategy for your codebase and be ready to reject
code changes that could affect production
environment negatively.&lt;/p&gt;

&lt;h2 id=&quot;5-leverage-your-teammates-and-clients-for-advice&quot;&gt;5. Leverage your teammates and clients for advice&lt;/h2&gt;

&lt;p&gt;Compared to other kind of products I used to work
on developers usually have more correct opinions
about building API.&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Oct 2016 09:45:58 -0700</pubDate>
        <link>http://jasonkim.ca/blog/2016/10/09/easily-overlooked-parts-on-developing-rest-api/</link>
        <guid isPermaLink="true">http://jasonkim.ca/blog/2016/10/09/easily-overlooked-parts-on-developing-rest-api/</guid>
        
        
        <category>api</category>
        
        <category>rest</category>
        
      </item>
    
      <item>
        <title>Benchmarking Web Frameworks</title>
        <description>&lt;p&gt;I had some time over the weekend, and I decided that I would benchmark some
web frameworks for possible backend API to work with in the future. I copied
&lt;a href=&quot;https://github.com/koajs/koa/blob/master/benchmarks/run&quot;&gt;how Koa.js does its benchmark&lt;/a&gt;.
I prepared &lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Ruby on Rails&lt;/a&gt;,
&lt;a href=&quot;http://restify.com/&quot;&gt;Restify&lt;/a&gt;, and &lt;a href=&quot;http://sparkjava.com/&quot;&gt;Spark&lt;/a&gt; to be
benchmarked. You can see &lt;a href=&quot;https://github.com/serv/framework-benchmarks&quot;&gt;the code hosted on GitHub here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here are the results of the benchmarks. The number represents requests / second.
Higher is better.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;frameworks&lt;/th&gt;
      &lt;th&gt;req/s&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;ruby on rails&lt;/td&gt;
      &lt;td&gt;48.73&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;restify&lt;/td&gt;
      &lt;td&gt;8117.63&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;spark&lt;/td&gt;
      &lt;td&gt;32634.10&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/gOoneii.png&quot; alt=&quot;Web framework benchmarked&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I knew Ruby on Rails is slow, but I had no idea that it’s this slow. And on
the other hand, I knew Java web frameworks are generally fast, but I had no
idea that Spark is that fast! And Restify occupies a sweet spot between
Ruby on Rails and Spark.&lt;/p&gt;

&lt;p&gt;We can draw some conclusions from the findings.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use Spark for very highly trafficked microservices that requires requests
to be served at low latency&lt;/li&gt;
  &lt;li&gt;Use Restify for all kinds of backend API when you want to leverage a vast
catalog of Node.js packages and great development tools&lt;/li&gt;
  &lt;li&gt;Reserve using Ruby on Rails for product oriented application only.
I would not recommend Ruby on Rails for backend API that needs to
serve a large traffic.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 21 Jul 2016 21:45:58 -0700</pubDate>
        <link>http://jasonkim.ca/blog/2016/07/21/benchmarking-web-frameworks/</link>
        <guid isPermaLink="true">http://jasonkim.ca/blog/2016/07/21/benchmarking-web-frameworks/</guid>
        
        
        <category>node.js</category>
        
        <category>ruby</category>
        
        <category>java</category>
        
        <category>restify</category>
        
        <category>spark</category>
        
        <category>ruby on rails</category>
        
      </item>
    
      <item>
        <title>Fixing Memory Leak on Production Node.js Application</title>
        <description>&lt;p&gt;The last few days at work were rough.
My team was intensely focused on
preparing the production environment to be stable.
We’ve been having some
serious issues on the production environment.
One of the most serious production issues was a
nasty memory leak.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/lEnDrWZ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The graph above displays the memory usage of
12 node applications on our production
environment. The y-axis shows the memory usage
in percentage and the x-axis shows the time
span of 7 days. This narrow sawtooth
pattern on memory usage is extremely bad.
As you can see, all 12 servers
are accumulating usage in memory rapidly.
As a remedy for the memory leak, we had to
periodically restart our servers. This was less
than ideal, but because we had so many other
really high priority items last few weeks, we
just had to bite our tongue and suck it up.
However, the frequency at which we had to
restart our server started to increase.
We had to restart our servers every few days,
then every day, then it came to a point where we
were restarting our servers every 4 to 5 hours.
Thank god we have a globally distributed team
(Croatia, and Argentina), it could’ve been a
lot tougher without having team members in other
timezones. I can’t
emphasize this point enough, and I will take
another opportunity to praise having globally
distributed software development team in another
post in the future.&lt;/p&gt;

&lt;p&gt;After some &lt;a href=&quot;http://blog.jasonkim.ca/blog/2016/06/02/battle-technical-assumptions/&quot;&gt;pitfalls&lt;/a&gt;, we fixed the
memory leak. As you can see below, the overall
memory usage stays flat after 13:30 PM after our
memory leak fix was applied.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/JnCgcoi.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We came up with several different strategies to
fix the memory issue, but the working solution
came down to comparing two memory dumps at
different times and comparing their content.
I used &lt;a href=&quot;http://man7.org/linux/man-pages/man1/gcore.1.html&quot;&gt;gcore&lt;/a&gt; on a production server to gather a
memory dump soon after the server restart when
the memory usage is around 30%. After around
3 hours when the memory usage for the server
starts to hover around 60%, I took another memory
dump. I used &lt;a href=&quot;https://docs.oracle.com/cd/E18752_01/html/816-5041/chapter-8.html&quot;&gt;mdb&lt;/a&gt; on a local VM running
Solaris 11 to analyze the two memory dumps.&lt;/p&gt;

&lt;p&gt;Here is the memory dump of the production server
at around 30% memory usage.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;73ce2207ea9     4643        2 Arguments: 0, length
101b5ab4f71     5519        4 Object: albumId, albumNames, ...
 9719767799     6070        2 Object: localeCode, value
 971977c371     6966        1 Object: entry
1102bfc1dc31     8775        2 Object: id, genreIds
 971977b021     9086        2 Object: ids, href
 971973e051     9430        3 Array
    3015e01    16203        0 Object
 971974c9c9    19854        1 Object: nr_exclusive_duration_millis
 9719710199    19917       13 TraceSegment: name, transaction, ...
 971971cb11    20186        7 Timer: state, touched, duration, ...
    342d8d9    49769        0 Array
 971971cbb9    59489        1 Array
 971970f1c9    71743        2 Array
     OBJECT #OBJECTS   #PROPS CONSTRUCTOR: PROPS&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And here is the memory dump of the production
server at around 80% around 4 hours after
the server restart.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1102bfc1dc31   8775        2 Object: id, genreIds

...

110879a2c9    14099        6 ExponentialBackoffStrategy: ...
1108779561    15593        3 Array
45357fdf31    17059        2 Object: ids, href
   3015db1    34680        0 Object
110875b221    35287        4 Object: albumId, albumNames, ...
110875b2c9    38401        1 Object: entry
110875aff1    38481        2 Object: localeCode, value
1108708d51   198161        0 Array
1108706ae1   202984        1 Array
1108706a81   206039        1 Object: nr_exclusive_duration_millis
11087046d9   209896       13 TraceSegment: name, transaction, ...
1108704801   223481        7 Timer: state, touched, duration, ...
1108706aa1   507224        2 Array
    OBJECT #OBJECTS   #PROPS CONSTRUCTOR: PROPS&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The most notable cause of the memory increase is
&lt;code class=&quot;highlighter-rouge&quot;&gt;TraceSegment: name, transaction, ...&lt;/code&gt;.
You can see that the number of &lt;code class=&quot;highlighter-rouge&quot;&gt;TraceSegment&lt;/code&gt;
object count increased by 10 folds going
from 19917 to 209896. You can also see some
other object such as &lt;code class=&quot;highlighter-rouge&quot;&gt;Timer&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;/code&gt;
increasing. This is because those are properties
of the &lt;code class=&quot;highlighter-rouge&quot;&gt;TraceSegment&lt;/code&gt; object.
Contrast this number with the genre-tags object
that stayed exactly the same
&lt;code class=&quot;highlighter-rouge&quot;&gt;2 Object: id, genreIds&lt;/code&gt; at 8775. That object
is a json file parsed into memory at startup
of the app and it does not increase. This
suggests to me that the memory dump is indeed
accurate, and Node retains memory steady on
correctly coded objects.&lt;/p&gt;

&lt;p&gt;It turns out &lt;code class=&quot;highlighter-rouge&quot;&gt;TraceSegment&lt;/code&gt; objects are created
by &lt;a href=&quot;https://github.com/newrelic/node-newrelic/blob/1e7bbbaf34a15f0bb35aca63b0d8a3cfa2669d27/lib/transaction/trace/segment.js&quot;&gt;NewRelic&lt;/a&gt;. The fact that
I wasn’t able to recreate the severity of
memory leak convincingly on the development
environment from previous attempts also tells
me that the memory leak was caused by something
happening on the production environment.&lt;/p&gt;

&lt;p&gt;We get some benefits of having NewRelic monitoring, but disabling NewRelic on
production was no-brainer at this point.
We had to do it. We all acknowledged that
NewRelic is not the initial cause of the memory leak.
There is still something in our code that is
behaving naughtily with NewRelic, but we
got to put our the damn fire on production
first. So we did it. We disabled NewRelic
on production and the memory usage stopped
climbing and it remains very steady for now.&lt;/p&gt;

&lt;p&gt;I want to thank &lt;a href=&quot;https://yunong.io/2015/11/13/debugging-node-js-in-production/&quot;&gt;Yunong Xiao for sharing
Netflix’s experience on debugging Node.js in
production&lt;/a&gt;. It informed me about
useful tools in the wild and taught me how
I can use those tools to find the cause
of the memory leak. I also want to thank
&lt;a href=&quot;http://bryce.is/writing/code/mdb_v8/vm/virtualbox/omnios/2016/02/06/mdbv8-getting-started.html&quot;&gt;Bryce Neal for writing a detailed tutorial on setting up Solaris to use MDB&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jun 2016 22:30:56 -0700</pubDate>
        <link>http://jasonkim.ca/blog/2016/06/02/fixing-memory-leak-on-production-node-application/</link>
        <guid isPermaLink="true">http://jasonkim.ca/blog/2016/06/02/fixing-memory-leak-on-production-node-application/</guid>
        
        
        <category>node</category>
        
      </item>
    
      <item>
        <title>Battle Technical Assumptions</title>
        <description>&lt;p&gt;I was burned pretty bad yesterday. I’ve told myself many times to battle assumptions about feature and product requirements, and that product managers cannot give 100% oversight on what I am working on. Now I am going to add another kind of assumption I will question every time. The kind I am talking about is a technical assumption.&lt;/p&gt;

&lt;p&gt;Just like assumptions you make about a feature or a product, as a developer, making wrong technical assumptions can cost you dearly. Making technical assumptions get you started with the development faster, but you are playing a Russian roulette with yourself if you don’t have adequate technical planning to accompany your development process.&lt;/p&gt;

&lt;p&gt;Wrong technical assumptions can lead you to think that you are able to accomplish something when it is not technically feasible. I learned this the hard way yesterday at work.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/UtV84yu.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Currently we are having some nasty memory leak problem on the production environment coupled with unstable Redis storage and periodic slow down of upstream services.
My team is working really hard to resolve the issue.
After researching how to debug production Node systems, I decided that I would try getting some memory snapshots on a production server, and examine what is causing the memory increase.
I chose to use &lt;a href=&quot;https://github.com/bnoordhuis/node-heapdump&quot;&gt;heapdump&lt;/a&gt; to get V8 heap snapshots, and use Chrome’s developer tools’ profiler to examine the data.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/tOL9Xir.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In theory this was just perfect.
In practice, I made some unsound technical assumptions which resulted in a full day wasted.
Our local development environment are running Node 4.2.4 and the latest NPM 3.x. I was able to install Heapdump package no problem locally. But on the production environment, we are still running NPM 1.x!
I couldn’t find a way to install Heapdump on production. This problem itself can be solved by updating NPM obviously, but we haven’t fully tested how NPM 3 would work with our deployment process to our beta, load, and production environment.
Also any infrastructure change must be orchestrated through our TechOps team, and that typically takes several days to coordinate all efforts.&lt;/p&gt;

&lt;p&gt;Wrong technical assumptions are just as deadly as feature/product assumptions.
I will plan out more granular and incremental steps to determine how each development process will be carried out to meet the acceptance criteria of the feature story from now on.&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Jun 2016 22:30:56 -0700</pubDate>
        <link>http://jasonkim.ca/blog/2016/06/01/battle-technical-assumptions/</link>
        <guid isPermaLink="true">http://jasonkim.ca/blog/2016/06/01/battle-technical-assumptions/</guid>
        
        
        <category>software</category>
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>Using Recursive Depth-first Traversal to Make API Calls to the Object’s Children</title>
        <description>&lt;p&gt;I solved an interesting problem at work
recently, so I wanted to discuss that here.&lt;/p&gt;

&lt;p&gt;At Rhapsody, we handle millions of tracks and
tracks are categorized under hundreds of genres.
Genres are related to other genres by being
a parent or a child to another genre. A genre
may have up to 1 parent genre and have as many
children genres. Some top level genres such as
rock, pop, and hip hop do not have any parents.
It looks like a tree. The figure below is an
simplified example of how a genre tree looks
like.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/ynbGcss.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some genres have tags associated with them.
Tags are objects that describes what kind of
quality a piece of content has. Drake’s latest
album, Views, feels summery, catchy, soulful
and reflective. Then Views will have tags like
summer, pop, soulful and reflective.&lt;/p&gt;

&lt;p&gt;Now there was a problem where we had a way to
retrieve genres from tags, but we could not
retrieve tags from genres. As a temporary solution
to the problem, we decided that we would build and
store the mapping of going from genres to tags as
a static JSON file.&lt;/p&gt;

&lt;p&gt;Genre tags are similar to genres themselves, and
genre tags also have a tree data structure. Each
tag has a parent tag and can have many children
tags.&lt;/p&gt;

&lt;p&gt;In order to go through the entire genre tags tree,
I decided that I would implement recursive depth
first traversal method in ruby to make API calls to
retrieve data on all genre tags and its children.&lt;/p&gt;

&lt;p&gt;There are different parts to the code to accomplish
this, but let’s just look at the meatest part of
the code.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'childrenTagList'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'childrenTagList'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'genreIds'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'genreIds'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'genreIds'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'genreIds'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'childrenTagList'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CATALOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The code accepts &lt;code class=&quot;highlighter-rouge&quot;&gt;tag&lt;/code&gt; which is a string and
&lt;code class=&quot;highlighter-rouge&quot;&gt;array&lt;/code&gt; which contains pairs of tag_id and
genre_id. I better check for the terminating
condition. The terminating condition is to check
to see if the tag has any children tags. If it
doesn’t have any children tags, I proceed to
populate the array with the tag-genre pair and
return the array. Otherwise, I should still
populate the array with the tag-genre pair. But in
addition to that, I have to recursively call
&lt;code class=&quot;highlighter-rouge&quot;&gt;get_children&lt;/code&gt; for all children tags.
&lt;code class=&quot;highlighter-rouge&quot;&gt;get_children&lt;/code&gt; is responsible for requesting
metadata of children tags given a tag ID, using
&lt;a href=&quot;https://github.com/lostisland/faraday&quot;&gt;Faraday&lt;/a&gt;.
The response body in JSON format is parsed by
&lt;a href=&quot;https://github.com/ohler55/oj&quot;&gt;Oj&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 29 May 2016 00:47:42 -0700</pubDate>
        <link>http://jasonkim.ca/blog/2016/05/29/recursive-depth-first-traversal/</link>
        <guid isPermaLink="true">http://jasonkim.ca/blog/2016/05/29/recursive-depth-first-traversal/</guid>
        
        
        <category>algorithms</category>
        
        <category>ruby</category>
        
      </item>
    
  </channel>
</rss>
