<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jason Kim</title>
    <description>Writings on software and other topics
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 14 Jul 2020 22:20:42 -0700</pubDate>
    <lastBuildDate>Tue, 14 Jul 2020 22:20:42 -0700</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>Investigating Memory Leak in a Node.js Application</title>
        <description>&lt;p&gt;I was struck with a memory leak problem in Node.js application recently.
It is not fun dealing with memory leak problems. Unlike other typical bugs you
face caused by errors in syntax of your code or failures in upstream services,
a memory leak problem defies conventional approaches to squashing the bug.
You need to use unusual tools you don’t normally use and you typically will
need more time to solve the problem.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/Skr597z.png&quot; alt=&quot;memory leak&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s evaluate some some approaches and tools that you can use to resolve a
memory leak issue in Node.js Applications.&lt;/p&gt;

&lt;h2 id=&quot;heapdump-npm-package&quot;&gt;Heapdump NPM package&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/bnoordhuis/node-heapdump&quot;&gt;node-heapdump&lt;/a&gt; is an easy to use
NPM package that generates a V8 heap dump of your Node.js application.
You can examine the heap dump with the Developer Tool in the Chrome browser.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pros
    &lt;ul&gt;
      &lt;li&gt;Simple setup&lt;/li&gt;
      &lt;li&gt;Can integrate with your Node.js application and create &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/blob/master/sections/production/createmaintenanceendpoint.md&quot;&gt;a maintenance endpoint&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Easily inspect the V8 heap dump using Chrome Developer Tool&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cons
    &lt;ul&gt;
      &lt;li&gt;Only useable if the app is still responsive&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My Node.js app was unresponsive because it was executing a blocking function.
The blocking function was preventing the Node.js app from accepting any requests to create a heapdump.&lt;/p&gt;

&lt;p&gt;As you can see, there’s no silver bullet to investigating and resolving a memory
leak problem. The essence of solving memory leak problem can be described as
simply as 1) get a heap dump 2) inspect the heap dump 3) identify the cause of the
most memory exhausting object creation.
However, there are many different tools and techniques you to solve the
problem and no single way will present a simple solution. Let’s continue evaluating
other tools.&lt;/p&gt;

&lt;h2 id=&quot;gcore--mdb-on-solaris&quot;&gt;gcore + MDB on Solaris&lt;/h2&gt;

&lt;p&gt;4 years ago, I solved &lt;a href=&quot;http://blog.jasonkim.ca/blog/2016/06/03/fixing-memory-leak-on-production-node-application/&quot;&gt;another memory leak problem&lt;/a&gt;
in Node.js application. At that
time, the tool that allows you to inspect memory heap dump of a process, llnode
(I’ll present this tool last), wasn’t as mature as it is today. And at that time,
I could not use it with the heap dump. I had to use a tool called &lt;a href=&quot;https://docs.oracle.com/cd/E18752_01/html/816-5041/intro-27.html&quot;&gt;MDB&lt;/a&gt; with &lt;a href=&quot;https://man7.org/linux/man-pages/man1/gcore.1.html&quot;&gt;gcore&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pros
    &lt;ul&gt;
      &lt;li&gt;You can run gcore even when the Node.js app is unresponsive&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cons
    &lt;ul&gt;
      &lt;li&gt;Difficult setup. You need Solaris to run MDB. To learn more, you can read
this &lt;a href=&quot;http://blog.jasonkim.ca/blog/2016/06/03/fixing-memory-leak-on-production-node-application/&quot;&gt;previous blog post&lt;/a&gt; I wrote on this topic.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Because setting up Solaris is too cumbersome, I decided to explore using llnode
to inspect the gcore heap dump.&lt;/p&gt;

&lt;h2 id=&quot;gcore--llnode&quot;&gt;gcore + llnode&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodejs/llnode&quot;&gt;llnode&lt;/a&gt; is another tool for inspecting gcore heap dump.
I decided to use llnode because I was able to install the tool inside a docker container,
which hosts my Node.js app.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pros
    &lt;ul&gt;
      &lt;li&gt;Moderately easy to setup.&lt;/li&gt;
      &lt;li&gt;llnode is easy to use.&lt;/li&gt;
      &lt;li&gt;You can run gcore even when the Node.js app is unresponsive.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I could not find notable reasons why I shouldn’t use gcore + llnode to investigate
the memory issue.&lt;/p&gt;

&lt;p&gt;Here are the steps needed to prepare the tools needed to perform your investigation.
I am running Node.js application inside Ubuntu 18 Docker container.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go inside the Docker container running the Node.js app.
&lt;code class=&quot;highlighter-rouge&quot;&gt;docker exec -it app_name bash&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Update Ubuntu
&lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get update&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install lldb
&lt;code class=&quot;highlighter-rouge&quot;&gt;apt install lldb-4.0 liblldb-4.0-dev&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;You might see an warning message that reads&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mount: permission denied
update-binfmts: warning: Couldn't mount the binfmt_misc filesystem on /proc/sys/fs/binfmt_misc.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/54951262/binfmt-misc-problems-in-ubuntu18-04-under-docker&quot;&gt;You can safely ignore it for our purpose.&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Install node-gyp
&lt;code class=&quot;highlighter-rouge&quot;&gt;npm i node-gyp&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Install llnode
&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install llnode&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Install gcore
&lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get install gdb&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt; to identify the process number for your Node.js app.
&lt;code class=&quot;highlighter-rouge&quot;&gt;36 root 20 0 5700608 4.482g 29724 R 99.7 29.7 100:45.02 node /usr/src/a&lt;/code&gt;
In this case, the process number is 36.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Run gcore on the process.
&lt;code class=&quot;highlighter-rouge&quot;&gt;gcore 36&lt;/code&gt;
You might see this error.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ptrace: Operation not permitted.
You can't do that without a process to debug.
The program is not being run.
gcore: failed to create core.36
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To solve the problem in 8, you need to add this to your docker-compose file.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cap_add:
- SYS_PTRACE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;This is &lt;a href=&quot;https://jvns.ca/blog/2020/04/29/why-strace-doesnt-work-in-docker/&quot;&gt;a good blog post&lt;/a&gt; on why you need if you are curious.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Try step 8 again. gcore should work now.&lt;/li&gt;
  &lt;li&gt;Inspect the core dump with llnode
&lt;code class=&quot;highlighter-rouge&quot;&gt;./node_modules/.bin/llnode node -c core.36&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The process of investigation goes something like this.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;v8 findjsobjects&lt;/code&gt; inside llnode to determine what object is causing the memory leak. You might be wondering how does one tell which object is causing the memory leak.
There are mainly two ways to nail down the object causing the memory leak.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;When you have a rapidly growing memory leak, your heap dump presents an extreme version of &lt;a href=&quot;https://en.wikipedia.org/wiki/Pareto_principle&quot;&gt;Pareto principle&lt;/a&gt;. The object will present itself to be occupying a vast majority of memory will be where you will want to investigate. Here’s my result of &lt;code class=&quot;highlighter-rouge&quot;&gt;v8 findjsobjects&lt;/code&gt; demonstrating this effect.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
Instances      Size    Name
        109       3488 ContextifyScript
        138       9936 I
        187      13464 (ArrayBufferView)
        213      11928 NodeError
        220      17600 Layer
        226      12656 Node
        226      14456 Entry
        231      11096 Source
        273       6552 CallSite
       3129     250240 Module
      10930     961840 Tok
      16150    1033480 Loc
      30496     975872 (Array)
     336951    8086824 RowDataPacket
    8901702  286210248 Object
   11881688    3728960 (String)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When you have a much more slowly growing memory leak, you can’t easily tell what
JS object is responsible for the memory leak. In this case, you have to take 2 heap
dumps over a period time and see if you see any growth in some JS objects. The
object growing in the number of instances will be the cause of your memory leak.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Generic JS primitives (String, Number, Array etc) and Objects are unactionable. Determine what is the JS
object that is not JS primitives and Objects which appears to be cause
of the memory leak? In my case, it is &lt;code class=&quot;highlighter-rouge&quot;&gt;RowDataPacket&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;By padding logs and metrics around suspicious code, determine where in your code
causes the &lt;code class=&quot;highlighter-rouge&quot;&gt;RowDataPacket&lt;/code&gt; object to be created in such number.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You’ve now found the cause of the memory leak. Unfortunately, finding the cause of the memory leak is not sufficient to resolving the actual memory leak issue.
You still have to apply a remedy to mitigate the cause of the memory leak.
And for that step, good luck.&lt;/p&gt;
</description>
        <pubDate>Sun, 12 Jul 2020 21:17:11 -0700</pubDate>
        <link>http://localhost:4000/blog/2020/07/12/investigating-memory-leak/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2020/07/12/investigating-memory-leak/</guid>
        
        
        <category>node</category>
        
      </item>
    
      <item>
        <title>&quot;Big Data&quot; Engineering with Node.js</title>
        <description>&lt;p&gt;When you think about data engineering, people usually think about 
using Java or Python as the primary languages to work with.
The two languages both have a large community backing and many tools 
for handling big data.
While they are fine languages to work with, I want to throw Node.js
into the mix as a serious contender to get the job done.
Node.js is performant enough to do some heavy lifting and has great NPM packages
that help you develop fast. I wanted to share my experience of building data-intensive systems using Node.js.&lt;/p&gt;

&lt;p&gt;I’ve been working at &lt;a href=&quot;https://www.coupang.com/&quot;&gt;Coupang&lt;/a&gt; for just over a year now. I had the privilege of building the first 
&lt;a href=&quot;https://en.wikipedia.org/wiki/Extract,_transform,_load&quot;&gt;ETL&lt;/a&gt; 
system for Coupang’s advertising platform.
The ETL system began with a modest goal to clean and ingest advertising 
metadata and time series data on a daily basis.
Since the original ETL jobs began every day in the morning, I named
the ETL system, &lt;code class=&quot;highlighter-rouge&quot;&gt;Morning Star&lt;/code&gt;, referring to planet Venus that appears in 
the east before sunrise.
This is a bit of a misnomer now, given that the system is now running
ETL jobs on a real-time basis. I still kept the name.
Since its inception, Morning Star evolved into a much larger system
that is handling 500 GB of data, 400 million events per day, and the data volume is still growing.&lt;/p&gt;

&lt;p&gt;Morning Star needed to provide data to several kinds of users. Services
needed to retrieve appropriate data reliably in a timely fashion.
Analysts asked for a place where they can gather insights about our business. Also, Morning Star needed to provide reliable, normalized data for creating denormalized tables for specific use cases.&lt;/p&gt;

&lt;p&gt;Let’s examine the basic data flow of Morning Star. Morning Star’s 
infrastructure lives on AWS.
The data flow starts with several Lambda functions that trigger
different jobs for Morning Star by making an HTTP request to the 
load balancer.
The load balancer balances the load in a round robin fashion to 
EC2 instances. Based on the CPU usages, the EC2 instances dynamically
scale up or down to efficiently handle the load.
The EC2 instance that is given the request to handle a job, downloads
the raw files from S3 Data Lake. The raw files in S3 originate
from several other
services. Morning Star cleans, enriches and anonymizes the raw data depending on which job it has to perform. 
The massaged data is then uploaded back to the data lake, where
it is subsequently copied to Redshift.
Redshift is where various other services and users can consume the
data to their liking.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/BsZ1i9t.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Node.js has been an excellent tool for building the desired system.
Node.js finally has the &lt;code class=&quot;highlighter-rouge&quot;&gt;async-await&lt;/code&gt; pattern to take advantage of
parallelism without callbacks.
Having worked with callbacks and chained promises, I think
the async-await pattern solved major problems found in the previous
asynchronous programming patterns.
You can program your code spanning vertically rather than horizontally
like the nested callbacks make you do. Your code is easier to read
when it spans vertically.
You can handle errors more precisely than the chained promises pattern where
a single catch block is typically responsible for errors
thrown anywhere during the execution of multiple chained
promises.
You can have a more nimble control flow of your code with &lt;code class=&quot;highlighter-rouge&quot;&gt;async-await&lt;/code&gt;
because you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;if-else&lt;/code&gt; statements easier.
The ergonomics of coding was much improved with using async-await.&lt;/p&gt;

&lt;p&gt;Speaking of great ergonomics, I should also point out the &lt;code class=&quot;highlighter-rouge&quot;&gt;stream&lt;/code&gt;
module in Node.js to be a fantastic tool to process large files.
When you work on web services, you typically read and write
discrete chunks of data transactionally. 
On the other hand, it is very common to use stream to move
data from one place another in data engineering.
You often deal with cases where you no longer can load
the entire data onto the memory.
Or you might deal with a source that is continuously generating data that 
needs to be moved to another place in real time. 
That’s when you have to stream the data.
Node’s stream library helps you stream data reliably and manipulate
the data with ease.
The functions in the stream module are easy to understand and use.
They are well documented with an ample amount of examples, so you can easily
incorporate them into your code.
The stream library plays nicely with the async-await pattern I use
elsewhere as long as I wrap the stream code with a promise.&lt;/p&gt;

&lt;p&gt;There are other standard modules in Node.js that makes it 
suitable to do data engineering.
The &lt;code class=&quot;highlighter-rouge&quot;&gt;child-process&lt;/code&gt; module is used to execute terminal commands,
and it was useful in controlling 
&lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt;, 
&lt;a href=&quot;https://www.gnu.org/software/parallel/&quot;&gt;parallel&lt;/a&gt; and 
&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Clients#HiveServer2Clients-Beeline%E2%80%93CommandLineShell&quot;&gt;Hive Beeline client&lt;/a&gt;.
The &lt;code class=&quot;highlighter-rouge&quot;&gt;fs&lt;/code&gt; module had all the functions I needed to work with the file system,
and &lt;code class=&quot;highlighter-rouge&quot;&gt;zlib&lt;/code&gt; handle gzipping and gunzipping with stream perfectly.
And if I didn’t find an adequate module in the standard Node.js modules,
I found almost all of them in the NPM repository.
This assurance gave me the confidence to push development in Node.js,
and help me iterate faster.&lt;/p&gt;

&lt;p&gt;Node.js has some downsides when you try to use it to process data.
I applauded Node.js’ async-await to be an excellent pattern to use.
However, this means that you have to write a promise wrapper for
callbacks and pipe functions in order to incorporate it with the
async-await pattern. It’s not difficult, but it is tedious.&lt;/p&gt;

&lt;p&gt;I also had trouble finding an up to date Hive client for Node.js.
Hive is a widely used data warehousing tool for working with big data.
I was surprised to learn that there’s no well maintained 
Hive client available to use on NPM.
For this reason, I had to use Hive’s Beeline command line client and
write Node wrapper around it.
I had to install JDK, Hadoop, and Hive as dependencies for Beeline
to run.
There were a lot of unpleasant programming I had to do to make this 
work.&lt;/p&gt;

&lt;p&gt;Despite some of the problems with Node.js, it is still a great tool
for data engineering. It has many standard and third-party modules
to help to finish work. Node.js is also fast enough to process large datasets
in real-time. 
I knew that Node.js is great at creating nice web apps and services.
I am glad to know that it is also a fine tool for data engineering.&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Apr 2019 21:17:11 -0700</pubDate>
        <link>http://localhost:4000/blog/2019/04/26/data-engineering-with-nodejs/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2019/04/26/data-engineering-with-nodejs/</guid>
        
        
        <category>node</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Resolving Bluebird Promises With Concurrency</title>
        <description>&lt;p&gt;I am using &lt;a href=&quot;http://bluebirdjs.com/docs/getting-started.html&quot;&gt;Bluebird&lt;/a&gt; as 
the main &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;promise&lt;/a&gt; library for
my Node projects these days.
I frequently use &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise.all(array)&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise.props(object)&lt;/code&gt; to
resolve multiple promises in an array or an object at once.
This is fine if there is not limit to the number of promises 
your system can handle. Often, this is not the case.
For example, it’s not a good idea to resolve 1K requests at once.
This is when you want to use &lt;strong&gt;concurrency&lt;/strong&gt; provided by Bluebird.&lt;/p&gt;

&lt;h2 id=&quot;dealing-with-an-array-of-promises&quot;&gt;Dealing with an Array of Promises&lt;/h2&gt;

&lt;p&gt;Let’s say we used to resolve an array of promises naively this way.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;requestUrls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'...'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// has 1K urls&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promises&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;requestUrls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reqUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;promises&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Better way to handle this is with concurrency. In this example,
we will resolve 4 at a time. If you want to resolve the promises one at 
a time, you will want to use the concurrency of 1.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;requestUrls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'...'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// has 1K urls&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;requestUrls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reqUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;concurrency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;dealing-with-an-object-of-promises&quot;&gt;Dealing with an Object of Promises&lt;/h2&gt;

&lt;p&gt;If the number of promises in the object is small, you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;props&lt;/code&gt; 
to resolve them.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;idRequestUrlPairs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// has 1K urls&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promises&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;idRequestUrlPairs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;promises&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;idRequestUrlPairs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bluebird doesn’t have a direct way to resolve an object of promises 
concurrently, but here is a way to do it with &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt;. Resolving an object
of promises using concurrency looks something like this.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;idRequestPromisePairs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// has 1K urls&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toBeResolved&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
    
    &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;idRequestPromisePairs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;idRequestPromisePairs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;toBeResolved&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;concurrency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// toBeResolved should have resolved promises;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toBeResolved&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Thu, 14 Jun 2018 21:17:11 -0700</pubDate>
        <link>http://localhost:4000/blog/2018/06/14/resolving-bluebird-promises-with-concurrency/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/06/14/resolving-bluebird-promises-with-concurrency/</guid>
        
        
        <category>node</category>
        
        <category>javascript</category>
        
        <category>bluebird</category>
        
      </item>
    
      <item>
        <title>Using ActiveStorage Today (prior to Rails 5.2 release)</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://weblog.rubyonrails.org/2017/7/15/this-week-in-rails-active-storage-telling-secrets-and-time-travelling/&quot;&gt;DHH announced earlier in the year that Rails 5.2 will have a brand new component called ActiveStorage&lt;/a&gt;.
ActiveStorage will manage user uploads such as photos directly by Rails.&lt;/p&gt;

&lt;p&gt;Since then, a lot of progress has been made to integrate ActiveStorage to
Rails, and you can actually use ActiveStorage today. This blog will explore
the how you can update your Rails app to use ActiveStorage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Warning!&lt;/strong&gt; You will be using the bleeding edge version of Rails and
there may be unforseen problems caused by it.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-activestorage-for-rails&quot;&gt;Setting up ActiveStorage for Rails&lt;/h2&gt;

&lt;h4 id=&quot;1-if-you-are-using-rails-version-before-5114-update-rails-to-5114-by-updating-your-gemfile&quot;&gt;1. If you are using Rails version before 5.1.14, update Rails to 5.1.14 by updating your Gemfile&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rails'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 5.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;gt;= 5.1.4'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;2-run--bundle-update-rails&quot;&gt;2. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ bundle update rails&lt;/code&gt;&lt;/h4&gt;

&lt;h4 id=&quot;3-run--rails-appupdate-and-resolve-any-code-differences&quot;&gt;3. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ rails app:update&lt;/code&gt; and resolve any code differences.&lt;/h4&gt;

&lt;h4 id=&quot;4-test-that-updating-to-5114-went-ok&quot;&gt;4. Test that updating to &lt;code class=&quot;highlighter-rouge&quot;&gt;5.1.14&lt;/code&gt; went ok.&lt;/h4&gt;

&lt;h4 id=&quot;5-now-we-want-to-update-rails-to-the-latest-bleeding-edge-version-in-the&quot;&gt;5. Now we want to update rails to the latest bleeding edge version. In the&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;, add the following lines.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;git_source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repo_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;repo_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repo_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repo_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repo_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repo_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.git&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rails'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;github: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'rails/rails'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'arel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;git: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://github.com/rails/arel.git'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bootsnap'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 1.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;gt;= 1.1.5'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;require: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;6-run--bundle-update-rails&quot;&gt;6. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ bundle update rails&lt;/code&gt;&lt;/h4&gt;

&lt;h4 id=&quot;7--bundle-exec-rails--v-should-display-the-bleeding-edge-version&quot;&gt;7. &lt;code class=&quot;highlighter-rouge&quot;&gt;$ bundle exec rails -v&lt;/code&gt; should display the bleeding edge version,&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Rails 5.2.0.alpha&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;8-update-the-application-configs-run--bundle-exec-rails-appupdate&quot;&gt;8. Update the application configs. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ bundle exec rails app:update&lt;/code&gt;.&lt;/h4&gt;

&lt;h4 id=&quot;9-when-you-run--binrails---tasks-you-should-see&quot;&gt;9. When you run, &lt;code class=&quot;highlighter-rouge&quot;&gt;$ ./bin/rails --tasks&lt;/code&gt;, you should see,&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rails active_storage:install&lt;/code&gt; as an available task.&lt;/p&gt;

&lt;h4 id=&quot;10-run--binrails-active_storageinstall-this-should-generate-a-migration-file&quot;&gt;10. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ ./bin/rails active_storage:install&lt;/code&gt;. This should generate a migration file.&lt;/h4&gt;

&lt;h4 id=&quot;11-run--binrails-dbmigrate-now-our-sqlite-db-should-be-ready-to-support-activestorage&quot;&gt;11. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ ./bin/rails db:migrate&lt;/code&gt;. Now our sqlite db should be ready to support ActiveStorage.&lt;/h4&gt;

&lt;h2 id=&quot;a-simple-image-uploading-example-using-activestorage&quot;&gt;A simple image uploading example using ActiveStorage&lt;/h2&gt;

&lt;p&gt;Up until now, we’ve been preparing Rails application to support ActiveStorage.
Now that the application is equipped with ActiveStorage, let us build a
simple feature that allows us to create a post with images
that uses ActiveStorage.&lt;/p&gt;

&lt;h4 id=&quot;1-generate-post-model--binrails-g-model-post&quot;&gt;1. Generate post model. &lt;code class=&quot;highlighter-rouge&quot;&gt;$ ./bin/rails g model post&lt;/code&gt;.&lt;/h4&gt;

&lt;h4 id=&quot;2-lets-add-two-columns-to-post-table-title-body-in-the-migration-file&quot;&gt;2. Let’s add two columns to post table, &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt; in the migration file.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# db/migrate/20171114063756_create_posts.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CreatePosts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:posts&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:body&lt;/span&gt;

     &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;timestamps&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;3-lets-create-a-controller-for-posts-resource&quot;&gt;3. Let’s create a controller for posts resource.&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ ./bin/rails g controller posts&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;4-and-add-posts-resources-routes-in-the-configroutesrb&quot;&gt;4. And add posts resources routes in the &lt;code class=&quot;highlighter-rouge&quot;&gt;config/routes.rb&lt;/code&gt;.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:posts&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;5-we-need-to-associate-post-with-images&quot;&gt;5. We need to associate post with images.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationRecord&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;has_many_attached&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:images&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;6-lets-add-code-for-index-show-and-create-actions&quot;&gt;6. Let’s add code for index, show and create actions.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# app/controllers/posts_controller.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PostsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# we will display post form here&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# we will create post here&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create!&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;permit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# we will display post with photo&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;7-add-the-index-view-for-the-post-with-the-following-code-this-will-display-upload-form-on-localhost3000posts-page&quot;&gt;7. Add the index view for the post with the following code. This will display upload form on localhost:3000/posts page.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;# app/views/posts/index.html.erb
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form_with&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;model: &lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;local: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text_field&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;placeholder: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Title&quot;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text_area&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:body&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;file_field&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;multiple: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;submit&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;8-now-lets-add-a-view-for-show-post&quot;&gt;8. Now let’s add a view for show post.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;# app/views/posts/show.html.erb
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image_tag&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;9-try-submitting-a-photo-and-you-will-see-the-show-view-displays-the-image-you-just-submitted&quot;&gt;9. Try submitting a photo and you will see the show view displays the image you just submitted.&lt;/h4&gt;
&lt;p&gt;The image is currently stored locally in a
directory called &lt;code class=&quot;highlighter-rouge&quot;&gt;storage&lt;/code&gt; in the app root level. But you can configure
this to push the files to cloud file storage systems like AWS S3, Google Cloud
and Azure.&lt;/p&gt;

&lt;p&gt;As you can see, ActiveStorage presents a simplied file management system
that is well integrated with Rail’s ActiveRecord component.
As ActiveStorage matures, we should see majority of
file management use cases being covered by it.
While there are other file management systems out there for Rails, I suggest that
you consider ActiveStorage before you explore other options.&lt;/p&gt;

&lt;p&gt;Also check out &lt;a href=&quot;https://github.com/rails/rails/blob/master/activestorage/README.md&quot;&gt;the documentation on ActiveStorage&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can see the final working code on the &lt;a href=&quot;https://github.com/serv/rails-alpha-activestorage-example&quot;&gt;github repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wanna thank &lt;a href=&quot;https://twitter.com/jeffreyguenther&quot;&gt;@jeffreyguenther&lt;/a&gt; who
shared his experience of using ActiveStorage on his projects with me.&lt;/p&gt;

</description>
        <pubDate>Mon, 13 Nov 2017 11:17:11 -0800</pubDate>
        <link>http://localhost:4000/blog/2017/11/13/Using-ActiveStorage-Today/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2017/11/13/Using-ActiveStorage-Today/</guid>
        
        
        <category>ruby on rails</category>
        
      </item>
    
      <item>
        <title>Setting up Typescript</title>
        <description>&lt;p&gt;I have been using &lt;a href=&quot;https://babeljs.io/learn-es2015/&quot;&gt;ES2015 actively using Babe.js&lt;/a&gt;
and I was already convinced that compiling more dev-friendly language to
javascript is useful. One of the langauges that has been praised a lot in
this domain is &lt;a href=&quot;https://www.typescriptlang.org/index.html&quot;&gt;Typescript&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;install-typescript&quot;&gt;Install Typescript&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ yarn global add typescript&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you get an error saying &lt;code class=&quot;highlighter-rouge&quot;&gt;tsc&lt;/code&gt; command is not found, check out this
&lt;a href=&quot;https://stackoverflow.com/a/40333409/536890&quot;&gt;SO answer&lt;/a&gt; on this issue.&lt;/p&gt;

&lt;h3 id=&quot;linked-list-in-typescript&quot;&gt;Linked list in Typescript&lt;/h3&gt;

&lt;p&gt;Here is a linked list you can start to play with written in Typescript.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// index.ts&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./node'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;tail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// list.ts&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./node'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;tail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// node.ts&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now compile typescript into javascript.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ tsc index.ts&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This should generate &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;list.js&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;node.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let’s run these javascript files.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ node index.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This should print&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3
2
1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;what-i-think-about-typescript-after-using-it-for-an-hour&quot;&gt;What I think about Typescript after using it for an hour&lt;/h3&gt;

&lt;p&gt;Learning Typescript was intuitive and JS I was writing felt more precise
and controlled. This allowed me write less error prone javascript in
a short period time. I should learn more about tooling around Typescript
so that it feels more integrated into the javascript development
workflow.&lt;/p&gt;

</description>
        <pubDate>Sun, 05 Nov 2017 13:40:28 -0800</pubDate>
        <link>http://localhost:4000/blog/2017/11/05/typescript/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2017/11/05/typescript/</guid>
        
        
        <category>typescript</category>
        
      </item>
    
      <item>
        <title>What I learned upgrading a large Ember.js project from v2.3.0 to v2.12.1</title>
        <description>&lt;p&gt;I worked on upgrading a ~19 KLOC Ember.js codebase.
The previous Ember.js version was 2.3.0.
Now it is 2.12.1. Here, I am going to discuss why I had to upgrade
Ember.js, general approach to solving problems while upgrading a
framework.&lt;/p&gt;

&lt;p&gt;For a long time, Ember.js version 2.3.0 served us just fine. The framework
pretty much provided us with everything we needed out of
the box and small flaws here and there didn’t bother us. However, over
time, there started to arise several glaring problems with using an
older Ember.js version.&lt;/p&gt;

&lt;p&gt;As our app grew larger with some pages generating a large number of
components in a view, we experienced noticeable performance degredation in
DOM rendering. To mitigate this problem, we used an alternative way to
render components, &lt;a href=&quot;https://www.npmjs.com/package/ember-cli-raw-handlebars&quot;&gt;ember-cli-raw-handlebars&lt;/a&gt; which stripped away much of Ember related functionalities from the view
in order to increase the DOM rendering speed. The trade off for this was
introducing the “none-Ember.js” way of organizing our codebase, which made
our codebase look rather messy.&lt;/p&gt;

&lt;p&gt;Using older Ember.js also made it hard to use newer packages out in the wild.
When we wanted to introduce a new package or upgrade an existing package
to a newer version, the Ember framework started to throw cryptic errors
that were hard to debug and fix. The cost of not upgrading Ember.js became
greater than the convenience of relying on an older Ember.js.&lt;/p&gt;

&lt;h2 id=&quot;procedure-to-upgrade-emberjs&quot;&gt;Procedure to upgrade Ember.js&lt;/h2&gt;

&lt;p&gt;Ember v2.3.0 came out on Jan 17, 2016. A lot has changed since then. Simply
bumping the Ember version to the latest simply will not work. There will
be a lot of noticeable and unnoticeable bugs from doing that. Fixing those bugs
all at once is very difficult. I built a procedure to safely upgrade Ember.js
without creating tons of regressions.&lt;/p&gt;

&lt;p&gt;I needed Ember.js upgrade only branch on beta environment. Upgrading Ember.js
of a large endeavor takes a long time. Most likely, you will be asked to develop
features and fix bugs while you are working on upgrade Ember. For that reason,
preparing an isolated Ember.js upgrade only branch on beta will be
useful to allow QA to test the branch while you are working on other features.&lt;/p&gt;

&lt;p&gt;I wrote more automated tests. While I was making changes to the Ember.js
upgrade branch, I needed to make sure that I wasn’t breaking things while
I fix an issue. Automated tests helped me make sure that I make
safe changes that are tested.&lt;/p&gt;

&lt;p&gt;Since your team most likely will QA and review your changes, they will
also need to know how to prepare the development environment for the
Ember upgrade and how to bring it back to their own normal development
environment. I made sure this is clearly described and communicated to
others.&lt;/p&gt;

&lt;p&gt;Having some dedicated QA time is also really important. Framework update
touches all aspects of the app, and every core functionalities need to
be tested thoroughly before the change is released on production.&lt;/p&gt;

&lt;p&gt;I used binary search like algorithm to bump the versions to the move towards
the latest version.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;next_non_erroring_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destination_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_version&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destination_version&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;half_way&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;destination_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;causes_error?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;half_way&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;next_non_erroring_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;half_way&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;next_non_erroring_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;half_way&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destination_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;next_non_erroring_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2.3.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2.12.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The method above tries to find the first version closest to the original
version to causes error.&lt;/p&gt;

</description>
        <pubDate>Sun, 28 May 2017 13:00:00 -0700</pubDate>
        <link>http://localhost:4000/blog/2017/05/28/upgrading-ember/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2017/05/28/upgrading-ember/</guid>
        
        
        <category>software development</category>
        
      </item>
    
      <item>
        <title>My Macbook Alternative</title>
        <description>&lt;p&gt;I started using Macs since 2011. My first Mac is 13-inch MacBook Pro from
Late 2011. It was a versatile laptop which I was happy to pay a slight
premium for. It served me well through out my school years and
it was a perfect development box.
It was ideal for light amount of gaming to destress as well. Over the years,
the machine started to wear out, it’s become sluggish to the point where
I could no longer be productive anymore. It was time to look for another
laptop.&lt;/p&gt;

&lt;p&gt;I considered purchasing a 2016 Macbook pro, but the specs were lagging behind
its contemporaries in the same price range. It used to be that I would be
paying 100 to 200 bucks more for the mac when compared to PCs that have
similar specs. Compare to that, now I was looking at paying from 400 to 700
bucks more for the mac. This was unacceptable. I decided to buy a PC instead.
For daily usage of web browsing and gaming, I planned to use Windows 10 and
for software development, I planned to use Ubuntu installed on the same
machine.&lt;/p&gt;

&lt;p&gt;I decided to buy &lt;a href=&quot;https://smile.amazon.com/gp/product/B01DT4A2R4/ref=oh_aui_detailpage_o07_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;Acer Aspire E 15&lt;/a&gt; for $509.99. This was an amazing bargain for a
laptop that has ok cpu, acceptable ram and usable discrete graphics card.
Also, the main harddrive offered is an SSD. The laptop comes with 4 USB ports
and a SD card reader which is perfect for me who wants to get into
photography.&lt;/p&gt;

&lt;p&gt;I decided to upgrade 2 things hardware wise. First I wanted to increase my
storage. The machine comes with 250 GB SSD, but given that I want to play
games and store many photographs, I needed a larger harddrive. Also when
I partition the harddrive for Ubuntu, I wanted to leave myself at least 100 GB
for development. I bought &lt;a href=&quot;https://smile.amazon.com/gp/product/B00B4QESVQ/ref=oh_aui_detailpage_o02_s01?ie=UTF8&amp;amp;psc=1&quot;&gt;HGST Travelstar 7K1000 2.5-Inch 1TB&lt;/a&gt; for $61.99.
That left me with extra 1 TB of storage to play with.&lt;/p&gt;

&lt;p&gt;Also another easy upgrade that I decided to make is doubling my memory.
I bought &lt;a href=&quot;https://smile.amazon.com/gp/product/B015HQ9TGW/ref=oh_aui_detailpage_o02_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;Crucial 8 GB DDR 2133 MT/s RAM&lt;/a&gt; for $44.99.&lt;/p&gt;

&lt;p&gt;Installations for these parts are extremely easy, and tutorials can be found
easily online.&lt;/p&gt;

&lt;p&gt;And finally dualbooting Ubuntu on the machine requires some preparation, but
it’s definitely doable and just having UNIX compatible terminal beats all
the effort required to set it up in the first place.&lt;/p&gt;

&lt;p&gt;Overall, preparing a personal development machine that is able to play some
games at $616.97 was totally worth it.&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Jan 2017 13:56:59 -0800</pubDate>
        <link>http://localhost:4000/blog/2017/01/01/my-macbook-pro-alternative/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2017/01/01/my-macbook-pro-alternative/</guid>
        
        
        <category>software development</category>
        
      </item>
    
      <item>
        <title>Tips for Transitioning to a New Team or a New Job</title>
        <description>&lt;p&gt;I recently had to transition to a web team from an API team at work.
It was a difficult transition, but overall, it’s a transition that I
am really happy about. I like the new team and the new learning
opportunities transitioning to a new team allows me.
I bet starting a new job probably results in a similar situation, but
with a bigger scope of new work to learn about. Here are some tips
for someone who’s starting a new job or transitioning to a work
that will help you to get use to the new tasks as a software engineer.&lt;/p&gt;

&lt;h2 id=&quot;1-learn-the-directory-structure-of-the-codebase&quot;&gt;1. Learn the directory structure of the codebase&lt;/h2&gt;

&lt;p&gt;Learning 100% of the codebase in a short period of time is difficult.
This can be made easier by having someone explain the directory
structure of the codebase for you. Once you understand the context
of the directory sturcture, smaller parts of the codebase can be
made more sense easier.&lt;/p&gt;

&lt;h2 id=&quot;2-ask-questions-to-the-teammembers&quot;&gt;2. Ask questions to the teammembers&lt;/h2&gt;

&lt;p&gt;You have the experts of the codebase sitting around you. Ask them
questions and get the answers you need.
Have the questions be about things that you can’t figure out on
your own. For example, questions about codebase can be figured
out on your own with some struggles, but questions about how
Akamai cache is set up, how deployment works, how testing works,
how oncall process works, etc can’t be figured out on your own.
So for these things, you have ask questions.&lt;/p&gt;

&lt;h2 id=&quot;3-have-a-vision&quot;&gt;3. Have a vision&lt;/h2&gt;

&lt;p&gt;You should have a vision for your own work aside from the day
to day work at the team. This was a better advice I’ve received
from a coworker, and he is right. Doing your day to day job well
makes you a good engineer. If you have a vision about the project
you work on and attempt to improve the product with a vision,
you can be a great engineer. You have to ensure that your vision
is aligned with the product vision, team vision and the company
vision.&lt;/p&gt;
</description>
        <pubDate>Sun, 13 Nov 2016 08:45:58 -0800</pubDate>
        <link>http://localhost:4000/blog/2016/11/13/starting-a-new-job-or-transitioning-to-a-new-team/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2016/11/13/starting-a-new-job-or-transitioning-to-a-new-team/</guid>
        
        
        <category>career</category>
        
      </item>
    
      <item>
        <title>Easily Overlook Parts on Developing REST API</title>
        <description>&lt;p&gt;I recently transitioned off the API team and moved
work on web client team at work. I wanted to share
some things I wish I had known when I was deepdiving
in developing REST API.&lt;/p&gt;

&lt;h2 id=&quot;1-stability-uber-alles&quot;&gt;1. Stability uber alles&lt;/h2&gt;

&lt;p&gt;You can drop nearly everything on the ground and
focus on restoring stability of the API. No one
will mind.&lt;/p&gt;

&lt;h2 id=&quot;2-versioned-api-from-the-start&quot;&gt;2. Versioned API from the start&lt;/h2&gt;

&lt;p&gt;APIs are suppose to return consistent data that’s
been agreed by the server and the client. There
are times when the server must change the response
body structure to serve the needs of some clients
better. You should not change the response structure
for a given endpoint in such case. You should
version your API so that you can serve the needs
of the old clients and new clients equally well.&lt;/p&gt;

&lt;p&gt;Versioning can easily be a topic of conversation
on its own, but here are several considerations
you need to make when you implement versioning.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Where is versioning going to occur?
At load balancer or at app?&lt;/li&gt;
  &lt;li&gt;Is it going to be done via header or url?&lt;/li&gt;
  &lt;li&gt;How are you going to isolate the code change to
remain within a specific version? Also while
ensuring that the versioning doesn’t make coding
any more difficult.&lt;/li&gt;
  &lt;li&gt;How will you automatically test the newly
versioned APIs?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-use-api-specs&quot;&gt;3. Use API specs&lt;/h2&gt;

&lt;p&gt;Make use of spec to come to an agreement between
you and the clients before building the API.
You will be able to serve their needs better and
also possibly explain to the clients your limitations.&lt;/p&gt;

&lt;h2 id=&quot;4-load-testing&quot;&gt;4. Load testing&lt;/h2&gt;

&lt;p&gt;I didn’t realize how important this is until
our production environment was adversely affected
by some feature changes we made without properly
load testing them first. Develop a load testing
strategy for your codebase and be ready to reject
code changes that could affect production
environment negatively.&lt;/p&gt;

&lt;h2 id=&quot;5-leverage-your-teammates-and-clients-for-advice&quot;&gt;5. Leverage your teammates and clients for advice&lt;/h2&gt;

&lt;p&gt;Compared to other kind of products I used to work
on developers usually have more correct opinions
about building API.&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Oct 2016 09:45:58 -0700</pubDate>
        <link>http://localhost:4000/blog/2016/10/09/easily-overlooked-parts-on-developing-rest-api/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2016/10/09/easily-overlooked-parts-on-developing-rest-api/</guid>
        
        
        <category>api</category>
        
        <category>rest</category>
        
      </item>
    
      <item>
        <title>Benchmarking Web Frameworks</title>
        <description>&lt;p&gt;I had some time over the weekend, and I decided that I would benchmark some
web frameworks for possible backend API to work with in the future. I copied
&lt;a href=&quot;https://github.com/koajs/koa/blob/master/benchmarks/run&quot;&gt;how Koa.js does its benchmark&lt;/a&gt;.
I prepared &lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Ruby on Rails&lt;/a&gt;,
&lt;a href=&quot;http://restify.com/&quot;&gt;Restify&lt;/a&gt;, and &lt;a href=&quot;http://sparkjava.com/&quot;&gt;Spark&lt;/a&gt; to be
benchmarked. You can see &lt;a href=&quot;https://github.com/serv/framework-benchmarks&quot;&gt;the code hosted on GitHub here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here are the results of the benchmarks. The number represents requests / second.
Higher is better.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;frameworks&lt;/th&gt;
      &lt;th&gt;req/s&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;ruby on rails&lt;/td&gt;
      &lt;td&gt;48.73&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;restify&lt;/td&gt;
      &lt;td&gt;8117.63&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;spark&lt;/td&gt;
      &lt;td&gt;32634.10&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/gOoneii.png&quot; alt=&quot;Web framework benchmarked&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I knew Ruby on Rails is slow, but I had no idea that it’s this slow. And on
the other hand, I knew Java web frameworks are generally fast, but I had no
idea that Spark is that fast! And Restify occupies a sweet spot between
Ruby on Rails and Spark.&lt;/p&gt;

&lt;p&gt;We can draw some conclusions from the findings.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use Spark for very highly trafficked microservices that requires requests
to be served at low latency&lt;/li&gt;
  &lt;li&gt;Use Restify for all kinds of backend API when you want to leverage a vast
catalog of Node.js packages and great development tools&lt;/li&gt;
  &lt;li&gt;Reserve using Ruby on Rails for product oriented application only.
I would not recommend Ruby on Rails for backend API that needs to
serve a large traffic.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 21 Jul 2016 21:45:58 -0700</pubDate>
        <link>http://localhost:4000/blog/2016/07/21/benchmarking-web-frameworks/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2016/07/21/benchmarking-web-frameworks/</guid>
        
        
        <category>node.js</category>
        
        <category>ruby</category>
        
        <category>java</category>
        
        <category>restify</category>
        
        <category>spark</category>
        
        <category>ruby on rails</category>
        
      </item>
    
  </channel>
</rss>
